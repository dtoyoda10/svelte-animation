{"remainingRequest":"/Users/matt/Sites/motion/node_modules/babel-loader/lib/index.js??ruleSet[1].rules[0].use[1]!/Users/matt/Sites/motion/node_modules/ts-loader/index.js??ruleSet[1].rules[0].use[2]!/Users/matt/Sites/motion/dev/examples/Animation-stagger.tsx","dependencies":[{"path":"/Users/matt/Sites/motion/dev/examples/Animation-stagger.tsx","mtime":1642594856250},{"path":"/Users/matt/Sites/motion/node_modules/@pmmmwh/react-refresh-webpack-plugin/loader/index.js","mtime":1641995460598},{"path":"/Users/matt/Sites/motion/node_modules/cache-loader/dist/cjs.js","mtime":1641995460665},{"path":"/Users/matt/Sites/motion/node_modules/babel-loader/lib/index.js","mtime":1641995460018},{"path":"/Users/matt/Sites/motion/node_modules/ts-loader/index.js","mtime":1641995461506}],"contextDependencies":[],"result":["var _s = $RefreshSig$();\n\nimport { __read } from \"tslib\";\nimport * as React from \"react\";\nimport { useState } from \"react\";\nimport { motion } from \"framer-motion\";\nvar sidebarStyle = {\n  width: 100,\n  position: \"absolute\",\n  top: 0,\n  left: 0,\n  bottom: 0,\n  background: \"white\",\n  listStyle: \"none\",\n  padding: 40,\n  margin: 0\n};\nvar itemStyle = {\n  width: 100,\n  height: 100,\n  background: \"red\",\n  padding: 0,\n  margin: 0\n};\nexport var App = function () {\n  _s();\n\n  var _a = __read(useState(true), 2),\n      isOpen = _a[0],\n      setIsOpen = _a[1];\n\n  var _b = __read(React.useState([0, 1, 2, 3, 4, 5]), 2),\n      items = _b[0],\n      setItems = _b[1];\n\n  var sidebarPoses = {\n    open: {\n      x: 0,\n      transition: {\n        when: \"beforeChildren\",\n        staggerChildren: 0.05,\n        staggerDirection: -1\n      }\n    },\n    closed: {\n      x: -180,\n      transition: {\n        when: \"afterChildren\",\n        staggerChildren: 0.05\n      }\n    }\n  };\n  var itemPoses = {\n    open: {\n      scale: 1,\n      opacity: 1,\n      transition: {\n        scale: {\n          type: \"spring\",\n          stiffness: 400,\n          velocity: 40,\n          damping: 20\n        }\n      }\n    },\n    closed: {\n      scale: 0.5,\n      opacity: 0.1,\n      duration: 1\n    }\n  };\n  return React.createElement(motion.ul, {\n    variants: sidebarPoses,\n    initial: \"closed\",\n    animate: isOpen ? \"open\" : \"closed\",\n    style: sidebarStyle,\n    onClick: function () {\n      return setIsOpen(!isOpen);\n    }\n  }, shuffle(items).map(function (i) {\n    return React.createElement(motion.li, {\n      key: i,\n      variants: itemPoses,\n      style: itemStyle\n    });\n  }));\n};\n\n_s(App, \"MZIEJ39VYuQWkTLx+T8Sqomts6c=\");\n\n_c = App;\n\nfunction shuffle(array) {\n  var currentIndex = array.length,\n      temporaryValue,\n      randomIndex; // While there remain elements to shuffle...\n\n  while (0 !== currentIndex) {\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1; // And swap it with the current element.\n\n    temporaryValue = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n\n  return array;\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");",null]}