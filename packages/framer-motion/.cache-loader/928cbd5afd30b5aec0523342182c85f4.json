{"remainingRequest":"/Users/matt/Sites/motion/node_modules/babel-loader/lib/index.js??ruleSet[1].rules[0].use[1]!/Users/matt/Sites/motion/node_modules/ts-loader/index.js??ruleSet[1].rules[0].use[2]!/Users/matt/Sites/motion/packages/framer-motion/cypress/integration/drag-nested.ts","dependencies":[{"path":"/Users/matt/Sites/motion/packages/framer-motion/cypress/integration/drag-nested.ts","mtime":1635501741670},{"path":"/Users/matt/Sites/motion/node_modules/@pmmmwh/react-refresh-webpack-plugin/loader/index.js","mtime":1641995460598},{"path":"/Users/matt/Sites/motion/node_modules/cache-loader/dist/cjs.js","mtime":1641995460665},{"path":"/Users/matt/Sites/motion/node_modules/babel-loader/lib/index.js","mtime":1641995460018},{"path":"/Users/matt/Sites/motion/node_modules/ts-loader/index.js","mtime":1641995461506}],"contextDependencies":[],"result":["\"use strict\";\n\nfunction expectBbox(element, expectedBbox) {\n  var bbox = element.getBoundingClientRect();\n  expect(bbox.left).to.equal(expectedBbox.left);\n  expect(bbox.top).to.equal(expectedBbox.top);\n  expectedBbox.width && expect(bbox.width).to.equal(expectedBbox.width);\n  expectedBbox.height && expect(bbox.height).to.equal(expectedBbox.height);\n}\n\nfunction testNestedDrag(parentLayout, childLayout) {\n  var url = \"?test=drag-layout-nested\";\n  if (parentLayout) url += \"&parentLayout=true\";\n  if (childLayout) url += \"&childLayout=true\";\n  cy.visit(url).wait(50).get(\"#parent\").should(function (_a) {\n    var $parent = _a[0];\n    expectBbox($parent, {\n      top: 100,\n      left: 100,\n      width: 300,\n      height: 300\n    });\n  }).get(\"#child\").should(function (_a) {\n    var $child = _a[0];\n    expectBbox($child, {\n      top: 150,\n      left: 150,\n      width: 600,\n      height: 200\n    });\n  }).get(\"#control\").should(function (_a) {\n    var $child = _a[0];\n    expectBbox($child, {\n      top: 200,\n      left: 200\n    });\n  }).get(\"#parent\").trigger(\"pointerdown\", 5, 5).wait(50).trigger(\"pointermove\", 10, 10) // Gesture will start from first move past threshold\n  .wait(50).trigger(\"pointermove\", 50, 50).wait(50).trigger(\"pointerup\").should(function (_a) {\n    var $parent = _a[0];\n    expectBbox($parent, {\n      top: 150,\n      left: 150,\n      width: 300,\n      height: 300\n    });\n  }).get(\"#control\").should(function (_a) {\n    var $child = _a[0];\n    expectBbox($child, {\n      top: 250,\n      left: 250\n    });\n  }).get(\"#child\").should(function (_a) {\n    var $child = _a[0];\n    expectBbox($child, {\n      top: 200,\n      left: 200,\n      width: 600,\n      height: 200\n    });\n  }).trigger(\"pointerdown\", 5, 5).wait(50).trigger(\"pointermove\", 10, 10) // Gesture will start from first move past threshold\n  .wait(50).trigger(\"pointermove\", 50, 50).wait(50).get(\"#parent\").should(function (_a) {\n    var $parent = _a[0];\n    expectBbox($parent, {\n      top: 150,\n      left: 150,\n      width: 300,\n      height: 300\n    });\n  }).get(\"#child\").should(function (_a) {\n    var $child = _a[0];\n    expectBbox($child, {\n      top: 250,\n      left: 250,\n      width: 600,\n      height: 200\n    });\n  }).get(\"#control\").should(function (_a) {\n    var $child = _a[0];\n    expectBbox($child, {\n      top: 300,\n      left: 300\n    });\n  }).trigger(\"pointerup\").wait(50).get(\"#parent\").should(function (_a) {\n    var $parent = _a[0];\n    expectBbox($parent, {\n      top: 150,\n      left: 150,\n      width: 300,\n      height: 300\n    });\n  }).get(\"#child\").should(function (_a) {\n    var $child = _a[0];\n    expectBbox($child, {\n      top: 250,\n      left: 250,\n      width: 600,\n      height: 200\n    });\n  }).get(\"#control\").should(function (_a) {\n    var $child = _a[0];\n    expectBbox($child, {\n      top: 300,\n      left: 300\n    });\n  }).get(\"#parent\").trigger(\"pointerdown\", 5, 5).wait(20).trigger(\"pointermove\", 10, 10) // Gesture will start from first move past threshold\n  .wait(50).trigger(\"pointermove\", 50, 50).wait(50).trigger(\"pointerup\").get(\"#parent\").should(function (_a) {\n    var $parent = _a[0];\n    expectBbox($parent, {\n      top: 200,\n      left: 200,\n      width: 300,\n      height: 300\n    });\n  }).get(\"#child\").should(function (_a) {\n    var $child = _a[0];\n    expectBbox($child, {\n      top: 300,\n      left: 300,\n      width: 600,\n      height: 200\n    });\n  }).get(\"#control\").should(function (_a) {\n    var $child = _a[0];\n    expectBbox($child, {\n      top: 350,\n      left: 350\n    });\n  });\n}\n\ndescribe(\"Nested drag\", function () {\n  it(\"Parent: layout, Child: layout\", function () {\n    return testNestedDrag(true, true);\n  });\n  it(\"Parent: layout\", function () {\n    return testNestedDrag(true, false);\n  });\n  it(\"Child: layout\", function () {\n    return testNestedDrag(false, true);\n  });\n  it(\"Neither\", function () {\n    return testNestedDrag(false, false);\n  });\n});\n\nfunction testNestedDragConstraints(parentLayout, childLayout) {\n  var url = \"?test=drag-layout-nested&constraints=true\";\n  if (parentLayout) url += \"&parentLayout=true\";\n  if (childLayout) url += \"&childLayout=true\";\n  cy.visit(url).get(\"#parent\").trigger(\"pointerdown\", 40, 40).wait(50).trigger(\"pointermove\", 35, 35) // Gesture will start from first move past threshold\n  .wait(50).trigger(\"pointermove\", 20, 20).wait(50).trigger(\"pointerup\").should(function (_a) {\n    var $parent = _a[0]; // Should have only moved 10 px to the top\n\n    expectBbox($parent, {\n      top: 90,\n      left: 75,\n      width: 300,\n      height: 300\n    });\n  }).get(\"#child\").should(function (_a) {\n    var $child = _a[0];\n    expectBbox($child, {\n      top: 140,\n      left: 125,\n      width: 600,\n      height: 200\n    });\n  }).get(\"#control\").should(function (_a) {\n    var $child = _a[0];\n    expectBbox($child, {\n      top: 190,\n      left: 175\n    });\n  }).get(\"#parent\").trigger(\"pointerdown\", 5, 5).wait(50).trigger(\"pointermove\", 10, 10) // Gesture will start from first move past threshold\n  .wait(50).trigger(\"pointermove\", 200, 100).wait(50).trigger(\"pointerup\").should(function (_a) {\n    var $parent = _a[0];\n    expectBbox($parent, {\n      top: 190,\n      left: 200,\n      width: 300,\n      height: 300\n    });\n  }).get(\"#control\").should(function (_a) {\n    var $child = _a[0];\n    expectBbox($child, {\n      top: 290,\n      left: 300\n    });\n  }).get(\"#child\").should(function (_a) {\n    var $child = _a[0];\n    expectBbox($child, {\n      top: 240,\n      left: 250,\n      width: 600,\n      height: 200\n    });\n  }).trigger(\"pointerdown\", 5, 5, {\n    force: true\n  }).wait(50).trigger(\"pointermove\", 10, 10, {\n    force: true\n  }) // Gesture will start from first move past threshold\n  .wait(50).trigger(\"pointermove\", 300, 100, {\n    force: true\n  }).wait(50).trigger(\"pointerup\").get(\"#parent\").should(function (_a) {\n    var $parent = _a[0];\n    expectBbox($parent, {\n      top: 190,\n      left: 200,\n      width: 300,\n      height: 300\n    });\n  }).get(\"#child\").should(function (_a) {\n    var $child = _a[0];\n    expectBbox($child, {\n      top: 340,\n      left: 350,\n      width: 600,\n      height: 200\n    });\n  }).get(\"#control\").should(function (_a) {\n    var $child = _a[0];\n    expectBbox($child, {\n      top: 390,\n      left: 400\n    });\n  });\n}\n\ndescribe(\"Nested drag with constraints\", function () {\n  it(\"Parent: layout, Child: layout\", function () {\n    return testNestedDragConstraints(true, true);\n  });\n  it(\"Parent: layout\", function () {\n    return testNestedDragConstraints(true, false);\n  });\n  it(\"Child: layout\", function () {\n    return testNestedDragConstraints(false, true);\n  });\n  it(\"Neither\", function () {\n    return testNestedDragConstraints(false, false);\n  });\n});\n\nfunction testNestedDragConstraintsAndAnimation(parentLayout, childLayout) {\n  var url = \"?test=drag-layout-nested&constraints=true&animation=true\";\n  if (parentLayout) url += \"&parentLayout=true\";\n  if (childLayout) url += \"&childLayout=true\";\n  cy.visit(url).get(\"#parent\").trigger(\"pointerdown\", 5, 10).wait(50).trigger(\"pointermove\", 10, 10) // Gesture will start from first move past threshold\n  .wait(50).trigger(\"pointermove\", 200, 10, {\n    force: true\n  }).wait(50).should(function (_a) {\n    var $parent = _a[0]; // Should have only moved 10 px to the top\n\n    expectBbox($parent, {\n      top: 100,\n      left: 250,\n      width: 300,\n      height: 300\n    });\n  }).get(\"#child\").should(function (_a) {\n    var $child = _a[0];\n    expectBbox($child, {\n      top: 150,\n      left: 300,\n      width: 600,\n      height: 200\n    });\n  }).get(\"#control\").should(function (_a) {\n    var $child = _a[0];\n    expectBbox($child, {\n      top: 200,\n      left: 350\n    });\n  }).get(\"#parent\").trigger(\"pointerup\").wait(2000).should(function (_a) {\n    var $parent = _a[0]; // Should have only moved 10 px to the top\n\n    expectBbox($parent, {\n      top: 100,\n      left: 200,\n      width: 300,\n      height: 300\n    });\n  }).get(\"#child\").should(function (_a) {\n    var $child = _a[0];\n    expectBbox($child, {\n      top: 150,\n      left: 250,\n      width: 600,\n      height: 200\n    });\n  }).get(\"#control\").should(function (_a) {\n    var $child = _a[0];\n    expectBbox($child, {\n      top: 200,\n      left: 300\n    });\n  }).get(\"#child\").trigger(\"pointerdown\", 5, 10).wait(50).trigger(\"pointermove\", 10, 10) // Gesture will start from first move past threshold\n  .wait(50).trigger(\"pointermove\", 200, 10, {\n    force: true\n  }).wait(70).should(function (_a) {\n    var $child = _a[0];\n    expectBbox($child, {\n      top: 150,\n      left: 400,\n      width: 600,\n      height: 200\n    });\n  }).trigger(\"pointerup\").wait(2000).should(function (_a) {\n    var $child = _a[0];\n    expectBbox($child, {\n      top: 150,\n      left: 350,\n      width: 600,\n      height: 200\n    });\n  });\n}\n\nfunction testAlternateAxes(parentLayout, childLayout) {\n  var url = \"?test=drag-layout-nested&bothAxes=true\";\n  if (parentLayout) url += \"&parentLayout=true\";\n  if (childLayout) url += \"&childLayout=true\";\n  return cy.visit(url).wait(50).get(\"#child\").trigger(\"pointerdown\", 5, 5, {\n    force: true\n  }).wait(50).trigger(\"pointermove\", 10, 10, {\n    force: true\n  }).wait(50).trigger(\"pointermove\", 100, 100, {\n    force: true\n  }).wait(80).should(function (_a) {\n    var $child = _a[0];\n    expectBbox($child, {\n      top: 250,\n      left: 250,\n      width: 600,\n      height: 200\n    });\n  }).get(\"#control\").should(function (_a) {\n    var $child = _a[0];\n    expectBbox($child, {\n      top: 300,\n      left: 300\n    });\n  }).get(\"#parent\").should(function (_a) {\n    var $parent = _a[0];\n    expectBbox($parent, {\n      top: 200,\n      left: 100,\n      width: 300,\n      height: 300\n    });\n  }).wait(30).get(\"#child\").trigger(\"pointerup\", {\n    force: true\n  }).wait(80).should(function (_a) {\n    var $child = _a[0];\n    expectBbox($child, {\n      top: 250,\n      left: 250,\n      width: 600,\n      height: 200\n    });\n  }).get(\"#control\").should(function (_a) {\n    var $child = _a[0];\n    expectBbox($child, {\n      top: 300,\n      left: 300\n    });\n  }).get(\"#parent\").should(function (_a) {\n    var $parent = _a[0];\n    expectBbox($parent, {\n      top: 200,\n      left: 100,\n      width: 300,\n      height: 300\n    });\n  });\n}\n\ndescribe(\"Nested drag with alternate draggable axes\", function () {\n  /**\n   * Skipping for now as there are still issues when either draggable\n   * component is also involved in layout animation\n   */\n  it(\"Parent: layout, Child: layout\", function () {\n    return testAlternateAxes(true, true);\n  });\n  it(\"Parent: layout\", function () {\n    return testAlternateAxes(true, false);\n  });\n  it(\"Child: layout\", function () {\n    return testAlternateAxes(false, true);\n  });\n  it(\"Neither\", function () {\n    return testAlternateAxes(false, false);\n  });\n});\ndescribe(\"Nested drag with constraints and animation\", function () {\n  it(\"Parent: layout, Child: layout\", function () {\n    return testNestedDragConstraintsAndAnimation(true, true);\n  });\n  it(\"Parent: layout\", function () {\n    return testNestedDragConstraintsAndAnimation(true, false);\n  });\n  it(\"Child: layout\", function () {\n    return testNestedDragConstraintsAndAnimation(false, true);\n  });\n  it(\"Neither\", function () {\n    return testNestedDragConstraintsAndAnimation(false, false);\n  });\n});",{"version":3,"sources":["/Users/matt/Sites/motion/packages/framer-motion/cypress/integration/drag-nested.ts"],"names":["expectBbox","element","expectedBbox","bbox","getBoundingClientRect","expect","left","to","equal","top","width","height","testNestedDrag","parentLayout","childLayout","url","cy","visit","wait","get","should","_a","$parent","$child","trigger","describe","it","testNestedDragConstraints","force","testNestedDragConstraintsAndAnimation","testAlternateAxes"],"mappings":"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","sourcesContent":["\"use strict\";\nfunction expectBbox(element, expectedBbox) {\n    var bbox = element.getBoundingClientRect();\n    expect(bbox.left).to.equal(expectedBbox.left);\n    expect(bbox.top).to.equal(expectedBbox.top);\n    expectedBbox.width && expect(bbox.width).to.equal(expectedBbox.width);\n    expectedBbox.height && expect(bbox.height).to.equal(expectedBbox.height);\n}\nfunction testNestedDrag(parentLayout, childLayout) {\n    var url = \"?test=drag-layout-nested\";\n    if (parentLayout)\n        url += \"&parentLayout=true\";\n    if (childLayout)\n        url += \"&childLayout=true\";\n    cy.visit(url)\n        .wait(50)\n        .get(\"#parent\")\n        .should(function (_a) {\n        var $parent = _a[0];\n        expectBbox($parent, {\n            top: 100,\n            left: 100,\n            width: 300,\n            height: 300,\n        });\n    })\n        .get(\"#child\")\n        .should(function (_a) {\n        var $child = _a[0];\n        expectBbox($child, {\n            top: 150,\n            left: 150,\n            width: 600,\n            height: 200,\n        });\n    })\n        .get(\"#control\")\n        .should(function (_a) {\n        var $child = _a[0];\n        expectBbox($child, {\n            top: 200,\n            left: 200,\n        });\n    })\n        .get(\"#parent\")\n        .trigger(\"pointerdown\", 5, 5)\n        .wait(50)\n        .trigger(\"pointermove\", 10, 10) // Gesture will start from first move past threshold\n        .wait(50)\n        .trigger(\"pointermove\", 50, 50)\n        .wait(50)\n        .trigger(\"pointerup\")\n        .should(function (_a) {\n        var $parent = _a[0];\n        expectBbox($parent, {\n            top: 150,\n            left: 150,\n            width: 300,\n            height: 300,\n        });\n    })\n        .get(\"#control\")\n        .should(function (_a) {\n        var $child = _a[0];\n        expectBbox($child, { top: 250, left: 250 });\n    })\n        .get(\"#child\")\n        .should(function (_a) {\n        var $child = _a[0];\n        expectBbox($child, {\n            top: 200,\n            left: 200,\n            width: 600,\n            height: 200,\n        });\n    })\n        .trigger(\"pointerdown\", 5, 5)\n        .wait(50)\n        .trigger(\"pointermove\", 10, 10) // Gesture will start from first move past threshold\n        .wait(50)\n        .trigger(\"pointermove\", 50, 50)\n        .wait(50)\n        .get(\"#parent\")\n        .should(function (_a) {\n        var $parent = _a[0];\n        expectBbox($parent, {\n            top: 150,\n            left: 150,\n            width: 300,\n            height: 300,\n        });\n    })\n        .get(\"#child\")\n        .should(function (_a) {\n        var $child = _a[0];\n        expectBbox($child, {\n            top: 250,\n            left: 250,\n            width: 600,\n            height: 200,\n        });\n    })\n        .get(\"#control\")\n        .should(function (_a) {\n        var $child = _a[0];\n        expectBbox($child, { top: 300, left: 300 });\n    })\n        .trigger(\"pointerup\")\n        .wait(50)\n        .get(\"#parent\")\n        .should(function (_a) {\n        var $parent = _a[0];\n        expectBbox($parent, {\n            top: 150,\n            left: 150,\n            width: 300,\n            height: 300,\n        });\n    })\n        .get(\"#child\")\n        .should(function (_a) {\n        var $child = _a[0];\n        expectBbox($child, {\n            top: 250,\n            left: 250,\n            width: 600,\n            height: 200,\n        });\n    })\n        .get(\"#control\")\n        .should(function (_a) {\n        var $child = _a[0];\n        expectBbox($child, { top: 300, left: 300 });\n    })\n        .get(\"#parent\")\n        .trigger(\"pointerdown\", 5, 5)\n        .wait(20)\n        .trigger(\"pointermove\", 10, 10) // Gesture will start from first move past threshold\n        .wait(50)\n        .trigger(\"pointermove\", 50, 50)\n        .wait(50)\n        .trigger(\"pointerup\")\n        .get(\"#parent\")\n        .should(function (_a) {\n        var $parent = _a[0];\n        expectBbox($parent, {\n            top: 200,\n            left: 200,\n            width: 300,\n            height: 300,\n        });\n    })\n        .get(\"#child\")\n        .should(function (_a) {\n        var $child = _a[0];\n        expectBbox($child, {\n            top: 300,\n            left: 300,\n            width: 600,\n            height: 200,\n        });\n    })\n        .get(\"#control\")\n        .should(function (_a) {\n        var $child = _a[0];\n        expectBbox($child, { top: 350, left: 350 });\n    });\n}\ndescribe(\"Nested drag\", function () {\n    it(\"Parent: layout, Child: layout\", function () { return testNestedDrag(true, true); });\n    it(\"Parent: layout\", function () { return testNestedDrag(true, false); });\n    it(\"Child: layout\", function () { return testNestedDrag(false, true); });\n    it(\"Neither\", function () { return testNestedDrag(false, false); });\n});\nfunction testNestedDragConstraints(parentLayout, childLayout) {\n    var url = \"?test=drag-layout-nested&constraints=true\";\n    if (parentLayout)\n        url += \"&parentLayout=true\";\n    if (childLayout)\n        url += \"&childLayout=true\";\n    cy.visit(url)\n        .get(\"#parent\")\n        .trigger(\"pointerdown\", 40, 40)\n        .wait(50)\n        .trigger(\"pointermove\", 35, 35) // Gesture will start from first move past threshold\n        .wait(50)\n        .trigger(\"pointermove\", 20, 20)\n        .wait(50)\n        .trigger(\"pointerup\")\n        .should(function (_a) {\n        var $parent = _a[0];\n        // Should have only moved 10 px to the top\n        expectBbox($parent, {\n            top: 90,\n            left: 75,\n            width: 300,\n            height: 300,\n        });\n    })\n        .get(\"#child\")\n        .should(function (_a) {\n        var $child = _a[0];\n        expectBbox($child, {\n            top: 140,\n            left: 125,\n            width: 600,\n            height: 200,\n        });\n    })\n        .get(\"#control\")\n        .should(function (_a) {\n        var $child = _a[0];\n        expectBbox($child, { top: 190, left: 175 });\n    })\n        .get(\"#parent\")\n        .trigger(\"pointerdown\", 5, 5)\n        .wait(50)\n        .trigger(\"pointermove\", 10, 10) // Gesture will start from first move past threshold\n        .wait(50)\n        .trigger(\"pointermove\", 200, 100)\n        .wait(50)\n        .trigger(\"pointerup\")\n        .should(function (_a) {\n        var $parent = _a[0];\n        expectBbox($parent, {\n            top: 190,\n            left: 200,\n            width: 300,\n            height: 300,\n        });\n    })\n        .get(\"#control\")\n        .should(function (_a) {\n        var $child = _a[0];\n        expectBbox($child, { top: 290, left: 300 });\n    })\n        .get(\"#child\")\n        .should(function (_a) {\n        var $child = _a[0];\n        expectBbox($child, {\n            top: 240,\n            left: 250,\n            width: 600,\n            height: 200,\n        });\n    })\n        .trigger(\"pointerdown\", 5, 5, { force: true })\n        .wait(50)\n        .trigger(\"pointermove\", 10, 10, { force: true }) // Gesture will start from first move past threshold\n        .wait(50)\n        .trigger(\"pointermove\", 300, 100, { force: true })\n        .wait(50)\n        .trigger(\"pointerup\")\n        .get(\"#parent\")\n        .should(function (_a) {\n        var $parent = _a[0];\n        expectBbox($parent, {\n            top: 190,\n            left: 200,\n            width: 300,\n            height: 300,\n        });\n    })\n        .get(\"#child\")\n        .should(function (_a) {\n        var $child = _a[0];\n        expectBbox($child, {\n            top: 340,\n            left: 350,\n            width: 600,\n            height: 200,\n        });\n    })\n        .get(\"#control\")\n        .should(function (_a) {\n        var $child = _a[0];\n        expectBbox($child, { top: 390, left: 400 });\n    });\n}\ndescribe(\"Nested drag with constraints\", function () {\n    it(\"Parent: layout, Child: layout\", function () {\n        return testNestedDragConstraints(true, true);\n    });\n    it(\"Parent: layout\", function () { return testNestedDragConstraints(true, false); });\n    it(\"Child: layout\", function () { return testNestedDragConstraints(false, true); });\n    it(\"Neither\", function () { return testNestedDragConstraints(false, false); });\n});\nfunction testNestedDragConstraintsAndAnimation(parentLayout, childLayout) {\n    var url = \"?test=drag-layout-nested&constraints=true&animation=true\";\n    if (parentLayout)\n        url += \"&parentLayout=true\";\n    if (childLayout)\n        url += \"&childLayout=true\";\n    cy.visit(url)\n        .get(\"#parent\")\n        .trigger(\"pointerdown\", 5, 10)\n        .wait(50)\n        .trigger(\"pointermove\", 10, 10) // Gesture will start from first move past threshold\n        .wait(50)\n        .trigger(\"pointermove\", 200, 10, { force: true })\n        .wait(50)\n        .should(function (_a) {\n        var $parent = _a[0];\n        // Should have only moved 10 px to the top\n        expectBbox($parent, {\n            top: 100,\n            left: 250,\n            width: 300,\n            height: 300,\n        });\n    })\n        .get(\"#child\")\n        .should(function (_a) {\n        var $child = _a[0];\n        expectBbox($child, {\n            top: 150,\n            left: 300,\n            width: 600,\n            height: 200,\n        });\n    })\n        .get(\"#control\")\n        .should(function (_a) {\n        var $child = _a[0];\n        expectBbox($child, { top: 200, left: 350 });\n    })\n        .get(\"#parent\")\n        .trigger(\"pointerup\")\n        .wait(2000)\n        .should(function (_a) {\n        var $parent = _a[0];\n        // Should have only moved 10 px to the top\n        expectBbox($parent, {\n            top: 100,\n            left: 200,\n            width: 300,\n            height: 300,\n        });\n    })\n        .get(\"#child\")\n        .should(function (_a) {\n        var $child = _a[0];\n        expectBbox($child, {\n            top: 150,\n            left: 250,\n            width: 600,\n            height: 200,\n        });\n    })\n        .get(\"#control\")\n        .should(function (_a) {\n        var $child = _a[0];\n        expectBbox($child, { top: 200, left: 300 });\n    })\n        .get(\"#child\")\n        .trigger(\"pointerdown\", 5, 10)\n        .wait(50)\n        .trigger(\"pointermove\", 10, 10) // Gesture will start from first move past threshold\n        .wait(50)\n        .trigger(\"pointermove\", 200, 10, { force: true })\n        .wait(70)\n        .should(function (_a) {\n        var $child = _a[0];\n        expectBbox($child, {\n            top: 150,\n            left: 400,\n            width: 600,\n            height: 200,\n        });\n    })\n        .trigger(\"pointerup\")\n        .wait(2000)\n        .should(function (_a) {\n        var $child = _a[0];\n        expectBbox($child, {\n            top: 150,\n            left: 350,\n            width: 600,\n            height: 200,\n        });\n    });\n}\nfunction testAlternateAxes(parentLayout, childLayout) {\n    var url = \"?test=drag-layout-nested&bothAxes=true\";\n    if (parentLayout)\n        url += \"&parentLayout=true\";\n    if (childLayout)\n        url += \"&childLayout=true\";\n    return cy\n        .visit(url)\n        .wait(50)\n        .get(\"#child\")\n        .trigger(\"pointerdown\", 5, 5, { force: true })\n        .wait(50)\n        .trigger(\"pointermove\", 10, 10, { force: true })\n        .wait(50)\n        .trigger(\"pointermove\", 100, 100, { force: true })\n        .wait(80)\n        .should(function (_a) {\n        var $child = _a[0];\n        expectBbox($child, {\n            top: 250,\n            left: 250,\n            width: 600,\n            height: 200,\n        });\n    })\n        .get(\"#control\")\n        .should(function (_a) {\n        var $child = _a[0];\n        expectBbox($child, { top: 300, left: 300 });\n    })\n        .get(\"#parent\")\n        .should(function (_a) {\n        var $parent = _a[0];\n        expectBbox($parent, {\n            top: 200,\n            left: 100,\n            width: 300,\n            height: 300,\n        });\n    })\n        .wait(30)\n        .get(\"#child\")\n        .trigger(\"pointerup\", { force: true })\n        .wait(80)\n        .should(function (_a) {\n        var $child = _a[0];\n        expectBbox($child, {\n            top: 250,\n            left: 250,\n            width: 600,\n            height: 200,\n        });\n    })\n        .get(\"#control\")\n        .should(function (_a) {\n        var $child = _a[0];\n        expectBbox($child, { top: 300, left: 300 });\n    })\n        .get(\"#parent\")\n        .should(function (_a) {\n        var $parent = _a[0];\n        expectBbox($parent, {\n            top: 200,\n            left: 100,\n            width: 300,\n            height: 300,\n        });\n    });\n}\ndescribe(\"Nested drag with alternate draggable axes\", function () {\n    /**\n     * Skipping for now as there are still issues when either draggable\n     * component is also involved in layout animation\n     */\n    it(\"Parent: layout, Child: layout\", function () { return testAlternateAxes(true, true); });\n    it(\"Parent: layout\", function () { return testAlternateAxes(true, false); });\n    it(\"Child: layout\", function () { return testAlternateAxes(false, true); });\n    it(\"Neither\", function () { return testAlternateAxes(false, false); });\n});\ndescribe(\"Nested drag with constraints and animation\", function () {\n    it(\"Parent: layout, Child: layout\", function () {\n        return testNestedDragConstraintsAndAnimation(true, true);\n    });\n    it(\"Parent: layout\", function () {\n        return testNestedDragConstraintsAndAnimation(true, false);\n    });\n    it(\"Child: layout\", function () {\n        return testNestedDragConstraintsAndAnimation(false, true);\n    });\n    it(\"Neither\", function () { return testNestedDragConstraintsAndAnimation(false, false); });\n});\n"]}]}