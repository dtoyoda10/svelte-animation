{"remainingRequest":"/Users/matt/Sites/motion/node_modules/babel-loader/lib/index.js??ruleSet[1].rules[0].use[1]!/Users/matt/Sites/motion/node_modules/ts-loader/index.js??ruleSet[1].rules[0].use[2]!/Users/matt/Sites/motion/packages/framer-motion/cypress/integration/layout-shared-lightbox-crossfade.ts","dependencies":[{"path":"/Users/matt/Sites/motion/packages/framer-motion/cypress/integration/layout-shared-lightbox-crossfade.ts","mtime":1635501741671},{"path":"/Users/matt/Sites/motion/node_modules/@pmmmwh/react-refresh-webpack-plugin/loader/index.js","mtime":1641995460598},{"path":"/Users/matt/Sites/motion/node_modules/cache-loader/dist/cjs.js","mtime":1641995460665},{"path":"/Users/matt/Sites/motion/node_modules/babel-loader/lib/index.js","mtime":1641995460018},{"path":"/Users/matt/Sites/motion/node_modules/ts-loader/index.js","mtime":1641995461506}],"contextDependencies":[],"result":["\"use strict\";\n\nfunction expectBbox(element, expectedBbox) {\n  var bbox = element.getBoundingClientRect();\n  expect(bbox.top).to.equal(expectedBbox.top);\n  expect(bbox.left).to.equal(expectedBbox.left);\n  expect(bbox.width).to.equal(expectedBbox.width);\n  expect(bbox.height).to.equal(expectedBbox.height);\n}\n\nfunction runScriptCrossfade(args) {\n  cy.visit(\"?test=layout-shared-lightbox-crossfade\".concat(args)).wait(50).get(\"#item-parent\").should(function (_a) {\n    var $box = _a[0];\n    expectBbox($box, {\n      top: 40,\n      left: 210,\n      width: 180,\n      height: 580\n    });\n  }).get(\"#item-child\").should(function (_a) {\n    var $box = _a[0];\n    expectBbox($box, {\n      top: 305,\n      left: 275,\n      width: 50,\n      height: 50\n    });\n  }) // Open lightbox\n  .trigger(\"click\").wait(50).get(\"#item-parent\").should(function (_a) {\n    var $box = _a[0];\n    expect(window.getComputedStyle($box).borderRadius).to.equal(\"8.33333% / 12.5%\");\n    expect(window.getComputedStyle($box).opacity).to.equal(\"0\");\n    expectBbox($box, {\n      top: 130,\n      left: 200,\n      width: 600,\n      height: 400\n    });\n  }).get(\"#item-child\").should(function (_a) {\n    var $box = _a[0];\n    expect(window.getComputedStyle($box).borderRadius).to.equal(\"50%\");\n    expect(window.getComputedStyle($box).opacity).to.equal(\"0\");\n    expectBbox($box, {\n      top: 180,\n      left: 250,\n      width: 50,\n      height: 50\n    });\n  }).get(\"#parent\").should(function (_a) {\n    var $box = _a[0];\n    expect(window.getComputedStyle($box).borderRadius).to.equal(\"8.33333% / 12.5%\");\n    expect(window.getComputedStyle($box).opacity).to.equal(\"1\");\n    expectBbox($box, {\n      top: 130,\n      left: 200,\n      width: 600,\n      height: 400\n    });\n  }).get(\"#child\").should(function (_a) {\n    var $box = _a[0];\n    expect(window.getComputedStyle($box).borderRadius).to.equal(\"50%\");\n    expect(window.getComputedStyle($box).opacity).to.equal(\"0.5\");\n    expectBbox($box, {\n      top: 180,\n      left: 250,\n      width: 50,\n      height: 50\n    });\n  }) // Close lightbox\n  .get(\"#overlay\").trigger(\"click\").wait(50).get(\"#item-parent\").should(function (_a) {\n    var $box = _a[0];\n    expect(window.getComputedStyle($box).borderRadius).to.equal(\"0%\");\n    expect(window.getComputedStyle($box).opacity).to.equal(\"1\");\n    expectBbox($box, {\n      top: 40,\n      left: 210,\n      width: 180,\n      height: 580\n    });\n  }).get(\"#item-child\").should(function (_a) {\n    var $box = _a[0];\n    expect(window.getComputedStyle($box).borderRadius).to.equal(\"50%\");\n    expect(window.getComputedStyle($box).opacity).to.equal(\"0.5\");\n    expectBbox($box, {\n      top: 305,\n      left: 275,\n      width: 50,\n      height: 50\n    });\n  });\n}\n\ndescribe(\"Shared layout lightbox example, crossfade\", function () {\n  it(\"Correctly animates between items and lightbox with instant transition\", function () {\n    runScriptCrossfade(\"&instant=true\");\n  });\n  it(\"Correctly animates between items and lightbox with very fast transition\", function () {\n    runScriptCrossfade(\"\");\n  });\n}); // function runScriptSwitch(args: string) {\n//     cy.visit(`?test=layout-shared-lightbox-crossfade${args}`)\n//         .wait(50)\n//         .get(\"#item-parent\")\n//         .should(([$box]: any) => {\n//             expectBbox($box, {\n//                 top: 40,\n//                 left: 210,\n//                 width: 180,\n//                 height: 580,\n//             })\n//         })\n//         .get(\"#item-child\")\n//         .should(([$box]: any) => {\n//             expectBbox($box, {\n//                 top: 305,\n//                 left: 275,\n//                 width: 50,\n//                 height: 50,\n//             })\n//         })\n//         // Open lightbox\n//         .trigger(\"click\")\n//         .wait(50)\n//         .get(\"#item-parent\")\n//         .should(([$box]: any) => {\n//             // expect(window.getComputedStyle($box).borderRadius).to.equal(\n//             //     \"8.33333% / 12.5%\"\n//             // )\n//             expect(window.getComputedStyle($box).visibility).to.equal(\"hidden\")\n//             expect(window.getComputedStyle($box).opacity).to.equal(\"0\")\n//             expectBbox($box, {\n//                 top: 40,\n//                 left: 210,\n//                 width: 180,\n//                 height: 580,\n//             })\n//         })\n//         .get(\"#item-child\")\n//         .should(([$box]: any) => {\n//             expect(window.getComputedStyle($box).borderRadius).to.equal(\"50%\")\n//             expect(window.getComputedStyle($box).opacity).to.equal(\"0.5\")\n//             expectBbox($box, {\n//                 top: 305,\n//                 left: 275,\n//                 width: 50,\n//                 height: 50,\n//             })\n//         })\n//         .get(\"#parent\")\n//         .should(([$box]: any) => {\n//             expect(window.getComputedStyle($box).borderRadius).to.equal(\n//                 \"8.33333% / 12.5%\"\n//             )\n//             expect(window.getComputedStyle($box).opacity).to.equal(\"1\")\n//             expectBbox($box, {\n//                 top: 130,\n//                 left: 200,\n//                 width: 600,\n//                 height: 400,\n//             })\n//         })\n//         .get(\"#child\")\n//         .should(([$box]: any) => {\n//             expect(window.getComputedStyle($box).borderRadius).to.equal(\"50%\")\n//             expect(window.getComputedStyle($box).opacity).to.equal(\"0.5\")\n//             expectBbox($box, {\n//                 top: 180,\n//                 left: 250,\n//                 width: 50,\n//                 height: 50,\n//             })\n//         })\n//         // Close lightbox\n//         .get(\"#overlay\")\n//         .trigger(\"click\")\n//         .wait(50)\n//         .get(\"#item-parent\")\n//         .should(([$box]: any) => {\n//             expect(window.getComputedStyle($box).visibility).to.equal(\"visible\")\n//             expect(window.getComputedStyle($box).borderRadius).to.equal(\"0%\")\n//             expect(window.getComputedStyle($box).opacity).to.equal(\"1\")\n//             expectBbox($box, {\n//                 top: 40,\n//                 left: 210,\n//                 width: 180,\n//                 height: 580,\n//             })\n//         })\n//         .get(\"#item-child\")\n//         .should(([$box]: any) => {\n//             expect(window.getComputedStyle($box).borderRadius).to.equal(\"50%\")\n//             expect(window.getComputedStyle($box).opacity).to.equal(\"0.5\")\n//             expectBbox($box, {\n//                 top: 305,\n//                 left: 275,\n//                 width: 50,\n//                 height: 50,\n//             })\n//         })\n// }\n// describe(\"Shared layout lightbox example, switch\", () => {\n//     it(\"Correctly animates between items and lightbox with instant transition\", () => {\n//         runScriptSwitch(`&instant=true&type=switch`)\n//     })\n//     it(\"Correctly animates between items and lightbox with very fast transition\", () => {\n//         runScriptSwitch(`&type=switch`)\n//     })\n// })",{"version":3,"sources":["/Users/matt/Sites/motion/packages/framer-motion/cypress/integration/layout-shared-lightbox-crossfade.ts"],"names":["expectBbox","element","expectedBbox","bbox","getBoundingClientRect","expect","top","to","equal","left","width","height","runScriptCrossfade","args","cy","visit","concat","wait","get","should","_a","$box","trigger","window","getComputedStyle","borderRadius","opacity","describe","it"],"mappings":"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","sourcesContent":["\"use strict\";\nfunction expectBbox(element, expectedBbox) {\n    var bbox = element.getBoundingClientRect();\n    expect(bbox.top).to.equal(expectedBbox.top);\n    expect(bbox.left).to.equal(expectedBbox.left);\n    expect(bbox.width).to.equal(expectedBbox.width);\n    expect(bbox.height).to.equal(expectedBbox.height);\n}\nfunction runScriptCrossfade(args) {\n    cy.visit(\"?test=layout-shared-lightbox-crossfade\".concat(args))\n        .wait(50)\n        .get(\"#item-parent\")\n        .should(function (_a) {\n        var $box = _a[0];\n        expectBbox($box, {\n            top: 40,\n            left: 210,\n            width: 180,\n            height: 580,\n        });\n    })\n        .get(\"#item-child\")\n        .should(function (_a) {\n        var $box = _a[0];\n        expectBbox($box, {\n            top: 305,\n            left: 275,\n            width: 50,\n            height: 50,\n        });\n    })\n        // Open lightbox\n        .trigger(\"click\")\n        .wait(50)\n        .get(\"#item-parent\")\n        .should(function (_a) {\n        var $box = _a[0];\n        expect(window.getComputedStyle($box).borderRadius).to.equal(\"8.33333% / 12.5%\");\n        expect(window.getComputedStyle($box).opacity).to.equal(\"0\");\n        expectBbox($box, {\n            top: 130,\n            left: 200,\n            width: 600,\n            height: 400,\n        });\n    })\n        .get(\"#item-child\")\n        .should(function (_a) {\n        var $box = _a[0];\n        expect(window.getComputedStyle($box).borderRadius).to.equal(\"50%\");\n        expect(window.getComputedStyle($box).opacity).to.equal(\"0\");\n        expectBbox($box, {\n            top: 180,\n            left: 250,\n            width: 50,\n            height: 50,\n        });\n    })\n        .get(\"#parent\")\n        .should(function (_a) {\n        var $box = _a[0];\n        expect(window.getComputedStyle($box).borderRadius).to.equal(\"8.33333% / 12.5%\");\n        expect(window.getComputedStyle($box).opacity).to.equal(\"1\");\n        expectBbox($box, {\n            top: 130,\n            left: 200,\n            width: 600,\n            height: 400,\n        });\n    })\n        .get(\"#child\")\n        .should(function (_a) {\n        var $box = _a[0];\n        expect(window.getComputedStyle($box).borderRadius).to.equal(\"50%\");\n        expect(window.getComputedStyle($box).opacity).to.equal(\"0.5\");\n        expectBbox($box, {\n            top: 180,\n            left: 250,\n            width: 50,\n            height: 50,\n        });\n    })\n        // Close lightbox\n        .get(\"#overlay\")\n        .trigger(\"click\")\n        .wait(50)\n        .get(\"#item-parent\")\n        .should(function (_a) {\n        var $box = _a[0];\n        expect(window.getComputedStyle($box).borderRadius).to.equal(\"0%\");\n        expect(window.getComputedStyle($box).opacity).to.equal(\"1\");\n        expectBbox($box, {\n            top: 40,\n            left: 210,\n            width: 180,\n            height: 580,\n        });\n    })\n        .get(\"#item-child\")\n        .should(function (_a) {\n        var $box = _a[0];\n        expect(window.getComputedStyle($box).borderRadius).to.equal(\"50%\");\n        expect(window.getComputedStyle($box).opacity).to.equal(\"0.5\");\n        expectBbox($box, {\n            top: 305,\n            left: 275,\n            width: 50,\n            height: 50,\n        });\n    });\n}\ndescribe(\"Shared layout lightbox example, crossfade\", function () {\n    it(\"Correctly animates between items and lightbox with instant transition\", function () {\n        runScriptCrossfade(\"&instant=true\");\n    });\n    it(\"Correctly animates between items and lightbox with very fast transition\", function () {\n        runScriptCrossfade(\"\");\n    });\n});\n// function runScriptSwitch(args: string) {\n//     cy.visit(`?test=layout-shared-lightbox-crossfade${args}`)\n//         .wait(50)\n//         .get(\"#item-parent\")\n//         .should(([$box]: any) => {\n//             expectBbox($box, {\n//                 top: 40,\n//                 left: 210,\n//                 width: 180,\n//                 height: 580,\n//             })\n//         })\n//         .get(\"#item-child\")\n//         .should(([$box]: any) => {\n//             expectBbox($box, {\n//                 top: 305,\n//                 left: 275,\n//                 width: 50,\n//                 height: 50,\n//             })\n//         })\n//         // Open lightbox\n//         .trigger(\"click\")\n//         .wait(50)\n//         .get(\"#item-parent\")\n//         .should(([$box]: any) => {\n//             // expect(window.getComputedStyle($box).borderRadius).to.equal(\n//             //     \"8.33333% / 12.5%\"\n//             // )\n//             expect(window.getComputedStyle($box).visibility).to.equal(\"hidden\")\n//             expect(window.getComputedStyle($box).opacity).to.equal(\"0\")\n//             expectBbox($box, {\n//                 top: 40,\n//                 left: 210,\n//                 width: 180,\n//                 height: 580,\n//             })\n//         })\n//         .get(\"#item-child\")\n//         .should(([$box]: any) => {\n//             expect(window.getComputedStyle($box).borderRadius).to.equal(\"50%\")\n//             expect(window.getComputedStyle($box).opacity).to.equal(\"0.5\")\n//             expectBbox($box, {\n//                 top: 305,\n//                 left: 275,\n//                 width: 50,\n//                 height: 50,\n//             })\n//         })\n//         .get(\"#parent\")\n//         .should(([$box]: any) => {\n//             expect(window.getComputedStyle($box).borderRadius).to.equal(\n//                 \"8.33333% / 12.5%\"\n//             )\n//             expect(window.getComputedStyle($box).opacity).to.equal(\"1\")\n//             expectBbox($box, {\n//                 top: 130,\n//                 left: 200,\n//                 width: 600,\n//                 height: 400,\n//             })\n//         })\n//         .get(\"#child\")\n//         .should(([$box]: any) => {\n//             expect(window.getComputedStyle($box).borderRadius).to.equal(\"50%\")\n//             expect(window.getComputedStyle($box).opacity).to.equal(\"0.5\")\n//             expectBbox($box, {\n//                 top: 180,\n//                 left: 250,\n//                 width: 50,\n//                 height: 50,\n//             })\n//         })\n//         // Close lightbox\n//         .get(\"#overlay\")\n//         .trigger(\"click\")\n//         .wait(50)\n//         .get(\"#item-parent\")\n//         .should(([$box]: any) => {\n//             expect(window.getComputedStyle($box).visibility).to.equal(\"visible\")\n//             expect(window.getComputedStyle($box).borderRadius).to.equal(\"0%\")\n//             expect(window.getComputedStyle($box).opacity).to.equal(\"1\")\n//             expectBbox($box, {\n//                 top: 40,\n//                 left: 210,\n//                 width: 180,\n//                 height: 580,\n//             })\n//         })\n//         .get(\"#item-child\")\n//         .should(([$box]: any) => {\n//             expect(window.getComputedStyle($box).borderRadius).to.equal(\"50%\")\n//             expect(window.getComputedStyle($box).opacity).to.equal(\"0.5\")\n//             expectBbox($box, {\n//                 top: 305,\n//                 left: 275,\n//                 width: 50,\n//                 height: 50,\n//             })\n//         })\n// }\n// describe(\"Shared layout lightbox example, switch\", () => {\n//     it(\"Correctly animates between items and lightbox with instant transition\", () => {\n//         runScriptSwitch(`&instant=true&type=switch`)\n//     })\n//     it(\"Correctly animates between items and lightbox with very fast transition\", () => {\n//         runScriptSwitch(`&type=switch`)\n//     })\n// })\n"]}]}