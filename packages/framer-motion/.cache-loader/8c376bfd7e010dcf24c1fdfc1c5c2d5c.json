{"remainingRequest":"/Users/matt/Sites/motion/node_modules/babel-loader/lib/index.js??ruleSet[1].rules[0].use[1]!/Users/matt/Sites/motion/node_modules/ts-loader/index.js??ruleSet[1].rules[0].use[2]!/Users/matt/Sites/motion/dev/examples/ThreeSwitch.tsx","dependencies":[{"path":"/Users/matt/Sites/motion/dev/examples/ThreeSwitch.tsx","mtime":1642594856256},{"path":"/Users/matt/Sites/motion/node_modules/@pmmmwh/react-refresh-webpack-plugin/loader/index.js","mtime":1641995460598},{"path":"/Users/matt/Sites/motion/node_modules/cache-loader/dist/cjs.js","mtime":1641995460665},{"path":"/Users/matt/Sites/motion/node_modules/babel-loader/lib/index.js","mtime":1641995460018},{"path":"/Users/matt/Sites/motion/node_modules/ts-loader/index.js","mtime":1641995461506}],"contextDependencies":[],"result":["var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n\nimport { __assign, __makeTemplateObject, __read } from \"tslib\";\nimport * as React from \"react\";\nimport { useState, Suspense, useCallback, useRef, useEffect } from \"react\";\nimport \"@react-three/fiber\";\nimport styled from \"styled-components\";\nimport { MotionConfig, useSpring } from \"framer-motion\";\nimport { motion, MotionCanvas } from \"framer-motion-3d\";\nimport { softShadows, Shadow } from \"@react-three/drei\";\nsoftShadows();\n\nfunction Switch(_a) {\n  _s();\n\n  var isOn = _a.isOn,\n      setOn = _a.setOn;\n  var onClick = useCallback(function () {\n    return setOn(!isOn);\n  }, [isOn]);\n  var lightVariants = {\n    on: {\n      color: \"#888\"\n    },\n    off: {\n      color: \"#000\"\n    }\n  };\n  return React.createElement(\"group\", {\n    scale: [1.25, 1.25, 1.25],\n    dispose: null\n  }, React.createElement(motion.group, {\n    \"position-y\": 0.85,\n    variants: {\n      on: {\n        z: -1.2\n      },\n      off: {\n        z: 1.2\n      }\n    }\n  }, React.createElement(motion.mesh, __assign({\n    receiveShadow: true,\n    castShadow: true,\n    variants: {\n      on: {\n        rotateX: 0\n      },\n      off: {\n        rotateX: Math.PI * 1.3\n      }\n    },\n    onClick: onClick\n  }, useCursor()), React.createElement(\"sphereGeometry\", {\n    args: [0.8, 64, 64]\n  }), React.createElement(motion.meshStandardMaterial, {\n    roughness: 0.5\n  })), React.createElement(motion.pointLight, {\n    intensity: 100,\n    distance: 1.4,\n    variants: lightVariants\n  }), React.createElement(Shadow, {\n    renderOrder: -1000,\n    position: [0, -1, 0],\n    rotation: [-Math.PI / 2, 0, 0],\n    scale: [1, 1, 1]\n  })));\n}\n\n_s(Switch, \"STKiB6exaJ0CoP7dhd8Yffuz5Uc=\", false, function () {\n  return [useCursor];\n});\n\n_c = Switch;\nexport var transition = {\n  type: \"spring\",\n  mass: 5,\n  stiffness: 1000,\n  damping: 50,\n  restDelta: 0.0001\n};\nexport function useAnimatedText(target, textTransition) {\n  _s2();\n\n  var ref = useRef(null);\n  var value = useSpring(target, textTransition);\n  useEffect(function () {\n    ref.current.innerText = target.toFixed(2);\n    return value.onChange(function (v) {\n      ref.current.innerText = v.toFixed(2);\n    });\n  });\n  useEffect(function () {\n    return value.set(target);\n  }, [target]);\n  return ref;\n}\n\n_s2(useAnimatedText, \"gQKAysHOaxrgDYtmu8JQyoRXOO8=\", false, function () {\n  return [useSpring];\n});\n\nexport function useCursor() {\n  _s3();\n\n  var _a = __read(useState(false), 2),\n      hovered = _a[0],\n      setHover = _a[1];\n\n  useEffect(function () {\n    return void (document.body.style.cursor = hovered ? \"pointer\" : \"auto\");\n  }, [hovered]);\n  return {\n    onPointerOver: function () {\n      return setHover(true);\n    },\n    onPointerOut: function () {\n      return setHover(false);\n    }\n  };\n}\n\n_s3(useCursor, \"R6oiTacYga5DaYN6hPJc8sHhe7Y=\");\n\nexport function Scene(_a) {\n  var isOn = _a.isOn,\n      setOn = _a.setOn;\n  return React.createElement(MotionCanvas, {\n    orthographic: true,\n    shadows: true,\n    dpr: [1, 2],\n    camera: {\n      zoom: 60,\n      position: [-5, 5, 5],\n      fov: 90\n    }\n  }, React.createElement(motion.group, {\n    initial: false,\n    animate: isOn ? \"on\" : \"off\"\n  }, React.createElement(\"ambientLight\", {\n    intensity: 0.1\n  }), React.createElement(\"directionalLight\", {\n    position: [-20, 20, 20],\n    intensity: 1\n  }), React.createElement(motion.directionalLight, {\n    position: [-20, -20, -20],\n    intensity: 0.5,\n    variants: colorVariants\n  }), React.createElement(motion.pointLight, {\n    position: [0, 0, 5],\n    distance: 5,\n    intensity: 5,\n    variants: colorVariants\n  }), React.createElement(motion.spotLight, {\n    variants: colorVariants,\n    position: [10, 20, 20],\n    angle: 0.1,\n    intensity: 2,\n    \"shadow-mapSize-width\": 2048,\n    \"shadow-mapSize-height\": 2048,\n    \"shadow-bias\": -0.00001,\n    castShadow: true\n  }), React.createElement(Suspense, {\n    fallback: null\n  }, React.createElement(Switch, {\n    isOn: isOn,\n    setOn: setOn\n  })), React.createElement(\"mesh\", {\n    receiveShadow: true,\n    renderOrder: 1000,\n    position: [0, 0, 0],\n    rotation: [-Math.PI / 2, 0, 0]\n  }, React.createElement(\"planeGeometry\", {\n    args: [10, 10]\n  }), React.createElement(motion.shadowMaterial, {\n    transparent: true,\n    variants: {\n      on: {\n        opacity: 0.1\n      },\n      off: {\n        opacity: 0.3\n      }\n    }\n  }))));\n}\n_c2 = Scene;\nvar colorVariants = {\n  on: {\n    color: \"#7fffd4\"\n  },\n  off: {\n    color: \"#c72f46\"\n  }\n};\nexport function App() {\n  _s4();\n\n  var _a = __read(useState(true), 2),\n      isOn = _a[0],\n      setOn = _a[1];\n\n  var headerRef = useAnimatedText(isOn ? 8 : 9, transition);\n  return React.createElement(MotionConfig, {\n    transition: transition\n  }, React.createElement(motion.div, {\n    className: \"container\",\n    initial: false,\n    animate: {\n      backgroundColor: isOn ? \"#c9ffed\" : \"#ff2558\",\n      color: isOn ? \"#7fffd4\" : \"#c70f46\"\n    }\n  }, React.createElement(\"h1\", {\n    className: \"open\",\n    children: \"<h1>\"\n  }), React.createElement(\"h1\", {\n    className: \"close\",\n    children: \"</h1>\"\n  }), React.createElement(motion.h1, {\n    ref: headerRef\n  }), React.createElement(Scene, {\n    isOn: isOn,\n    setOn: setOn\n  })));\n}\n\n_s4(App, \"3DA1SqPHh/wk/nx1cYWmedLsgEo=\", false, function () {\n  return [useAnimatedText];\n});\n\n_c3 = App;\nvar Container = styled.div(templateObject_1 || (templateObject_1 = __makeTemplateObject([\"\\n    .container {\\n        width: 200px;\\n        height: 200px;\\n        z-index: 0;\\n        background: #a2b9e7;\\n    }\\n\\n    canvas {\\n        cursor: pointer;\\n    }\\n\\n    [data-is-fullscreen=\\\"true\\\"] .container {\\n        position: fixed;\\n        inset: 0;\\n        width: auto;\\n        height: auto;\\n    }\\n\\n    h1 {\\n        z-index: 1;\\n        display: block;\\n        position: relative;\\n        font-size: 36px;\\n        line-height: 1;\\n    }\\n\\n    [data-is-fullscreen=\\\"true\\\"] h1 {\\n        position: fixed;\\n        top: 80px;\\n        font-size: 24px;\\n    }\\n\"], [\"\\n    .container {\\n        width: 200px;\\n        height: 200px;\\n        z-index: 0;\\n        background: #a2b9e7;\\n    }\\n\\n    canvas {\\n        cursor: pointer;\\n    }\\n\\n    [data-is-fullscreen=\\\"true\\\"] .container {\\n        position: fixed;\\n        inset: 0;\\n        width: auto;\\n        height: auto;\\n    }\\n\\n    h1 {\\n        z-index: 1;\\n        display: block;\\n        position: relative;\\n        font-size: 36px;\\n        line-height: 1;\\n    }\\n\\n    [data-is-fullscreen=\\\"true\\\"] h1 {\\n        position: fixed;\\n        top: 80px;\\n        font-size: 24px;\\n    }\\n\"])));\nvar templateObject_1;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Switch\");\n$RefreshReg$(_c2, \"Scene\");\n$RefreshReg$(_c3, \"App\");",null]}