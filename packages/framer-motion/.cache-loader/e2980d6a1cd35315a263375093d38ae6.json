{"remainingRequest":"/Users/matt/Sites/motion/node_modules/babel-loader/lib/index.js??ruleSet[1].rules[0].use[1]!/Users/matt/Sites/motion/node_modules/ts-loader/index.js??ruleSet[1].rules[0].use[2]!/Users/matt/Sites/motion/dev/tests/drag-ref-constraints.tsx","dependencies":[{"path":"/Users/matt/Sites/motion/dev/tests/drag-ref-constraints.tsx","mtime":1642594856269},{"path":"/Users/matt/Sites/motion/node_modules/@pmmmwh/react-refresh-webpack-plugin/loader/index.js","mtime":1641995460598},{"path":"/Users/matt/Sites/motion/node_modules/cache-loader/dist/cjs.js","mtime":1641995460665},{"path":"/Users/matt/Sites/motion/node_modules/babel-loader/lib/index.js","mtime":1641995460018},{"path":"/Users/matt/Sites/motion/node_modules/ts-loader/index.js","mtime":1641995461506}],"contextDependencies":[],"result":["var _s = $RefreshSig$();\n\nimport { __read } from \"tslib\";\nimport { motion, useMotionValue } from \"framer-motion\";\nimport * as React from \"react\"; // It's important for this test to only trigger a single rerender while dragging (in response to onDragStart) of draggable component.\n\nexport var App = function () {\n  _s();\n\n  var containerRef = React.useRef(null);\n\n  var _a = __read(React.useState(false), 2),\n      dragging = _a[0],\n      setDragging = _a[1];\n\n  var params = new URLSearchParams(window.location.search);\n  var layout = params.get(\"layout\") || undefined; // We do this to test when scroll position isn't 0/0\n\n  React.useLayoutEffect(function () {\n    window.scrollTo(0, 100);\n  }, []);\n  var x = useMotionValue(\"100%\");\n  return React.createElement(\"div\", {\n    style: {\n      height: 2000,\n      paddingTop: 100\n    }\n  }, React.createElement(motion.div, {\n    \"data-testid\": \"constraint\",\n    style: {\n      width: 200,\n      height: 200,\n      background: \"blue\"\n    },\n    ref: containerRef\n  }, React.createElement(motion.div, {\n    id: \"box\",\n    \"data-testid\": \"draggable\",\n    drag: true,\n    dragElastic: 0,\n    dragMomentum: false,\n    style: {\n      width: 50,\n      height: 50,\n      background: dragging ? \"yellow\" : \"red\",\n      x: x\n    },\n    dragConstraints: containerRef,\n    layout: layout,\n    onDragStart: function () {\n      return setDragging(true);\n    },\n    onDragEnd: function () {\n      return setDragging(false);\n    }\n  })));\n};\n\n_s(App, \"Dg+SOo1DRUmboTP6oWXwgtYGfsU=\", false, function () {\n  return [useMotionValue];\n});\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");",null]}