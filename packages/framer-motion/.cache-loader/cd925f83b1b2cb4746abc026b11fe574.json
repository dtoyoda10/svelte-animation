{"remainingRequest":"/Users/matt/Sites/motion/node_modules/babel-loader/lib/index.js??ruleSet[1].rules[0].use[1]!/Users/matt/Sites/motion/node_modules/ts-loader/index.js??ruleSet[1].rules[0].use[2]!/Users/matt/Sites/motion/dev/tests/scroll-projection.tsx","dependencies":[{"path":"/Users/matt/Sites/motion/dev/tests/scroll-projection.tsx","mtime":1642594856274},{"path":"/Users/matt/Sites/motion/node_modules/@pmmmwh/react-refresh-webpack-plugin/loader/index.js","mtime":1641995460598},{"path":"/Users/matt/Sites/motion/node_modules/cache-loader/dist/cjs.js","mtime":1641995460665},{"path":"/Users/matt/Sites/motion/node_modules/babel-loader/lib/index.js","mtime":1641995460018},{"path":"/Users/matt/Sites/motion/node_modules/ts-loader/index.js","mtime":1641995461506}],"contextDependencies":[],"result":["var _s = $RefreshSig$();\n\nimport { __read } from \"tslib\";\nimport { motion } from \"framer-motion\";\nimport * as React from \"react\";\nimport { useState } from \"react\";\n/**\n * This example checks that the targetBox is correctly adjusted for changes in scroll.\n *\n * Click the blue button to force a re-render.\n *\n * Drag the red box (position static) and the green box (position fixed).\n * Scroll. Click the blue button. Both boxes should stay in the correct place.\n *\n * TODO: automate this test\n */\n\nexport var App = function () {\n  _s();\n\n  var _a = __read(useState(0), 2),\n      count = _a[0],\n      setCount = _a[1];\n\n  var forceRender = function () {\n    return setCount(count + 1);\n  };\n\n  return React.createElement(\"div\", {\n    style: {\n      height: \"2000vh\",\n      background: \"linear-gradient(#fff, #000)\"\n    }\n  }, React.createElement(motion.div, {\n    drag: true,\n    style: {\n      width: 100,\n      height: 100,\n      background: \"red\"\n    }\n  }), React.createElement(motion.div, {\n    layout: true,\n    style: {\n      width: 100,\n      height: 100,\n      position: \"relative\",\n      left: count * 10,\n      background: \"purple\"\n    }\n  }), React.createElement(motion.div, {\n    drag: true,\n    style: {\n      width: 100,\n      height: 100,\n      background: \"green\",\n      position: \"fixed\"\n    }\n  }), React.createElement(\"div\", {\n    style: {\n      position: \"fixed\",\n      bottom: 10,\n      left: 10,\n      width: 50,\n      height: 50,\n      borderRadius: 25,\n      background: \"blue\"\n    },\n    onClick: forceRender\n  }));\n};\n\n_s(App, \"rGEI62VsuwnwPY/75ViYiWAYY24=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");",null]}