{"remainingRequest":"/Users/matt/Sites/motion/node_modules/babel-loader/lib/index.js??ruleSet[1].rules[0].use[1]!/Users/matt/Sites/motion/node_modules/ts-loader/index.js??ruleSet[1].rules[0].use[2]!/Users/matt/Sites/motion/dev/examples/Shared-layout-continuity.tsx","dependencies":[{"path":"/Users/matt/Sites/motion/dev/examples/Shared-layout-continuity.tsx","mtime":1642594856254},{"path":"/Users/matt/Sites/motion/node_modules/@pmmmwh/react-refresh-webpack-plugin/loader/index.js","mtime":1641995460598},{"path":"/Users/matt/Sites/motion/node_modules/cache-loader/dist/cjs.js","mtime":1641995460665},{"path":"/Users/matt/Sites/motion/node_modules/babel-loader/lib/index.js","mtime":1641995460018},{"path":"/Users/matt/Sites/motion/node_modules/ts-loader/index.js","mtime":1641995461506}],"contextDependencies":[],"result":["var _s = $RefreshSig$();\n\nimport { __assign, __read } from \"tslib\";\nimport * as React from \"react\";\nimport { motion, useCycle } from \"framer-motion\";\n/**\n * An example of a component resuming animation and layout state using shared layout and layoutId\n */\n\nfunction Component() {\n  _s();\n\n  var _a = __read(useCycle(0, 1, 2, 3), 2),\n      count = _a[0],\n      cycleCount = _a[1];\n\n  return React.createElement(motion.div, {\n    initial: false,\n    style: __assign({\n      position: \"absolute\"\n    }, styles[count]),\n    transition: {\n      duration: 3\n    },\n    animate: animate[count],\n    layoutId: \"box\",\n    id: \"shape-\".concat(count),\n    key: \"shape-\".concat(count),\n    onClick: function () {\n      return cycleCount();\n    }\n  });\n}\n\n_s(Component, \"okDMY05K7cVJk+9S15xNGLZ1JC4=\", false, function () {\n  return [useCycle];\n});\n\n_c = Component;\nexport var App = function () {\n  return React.createElement(\"div\", {\n    style: {\n      position: \"fixed\",\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n      background: \"white\",\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    }\n  }, React.createElement(Component, null));\n};\n_c2 = App;\nvar animate = [{\n  backgroundColor: \"#09f\",\n  borderRadius: 10,\n  opacity: 1\n}, {\n  backgroundColor: \"#90f\",\n  borderRadius: 100,\n  opacity: 0.5\n}, {\n  backgroundColor: \"#f09\",\n  borderRadius: 0,\n  opacity: 1\n}, {\n  backgroundColor: \"#9f0\",\n  borderRadius: 50,\n  opacity: 0.5\n}];\nvar styles = [{\n  width: 100,\n  height: 100,\n  top: 100\n}, {\n  width: 200,\n  height: 200,\n  left: 100\n}, {\n  width: 100,\n  height: 100,\n  left: \"calc(100vw - 100px)\"\n}, {\n  width: 200,\n  height: 200\n}];\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Component\");\n$RefreshReg$(_c2, \"App\");",null]}