{"remainingRequest":"/Users/matt/Sites/motion/node_modules/babel-loader/lib/index.js??ruleSet[1].rules[0].use[1]!/Users/matt/Sites/motion/node_modules/ts-loader/index.js??ruleSet[1].rules[0].use[2]!/Users/matt/Sites/motion/dev/examples/ThreeLayout.tsx","dependencies":[{"path":"/Users/matt/Sites/motion/dev/examples/ThreeLayout.tsx","mtime":1642594856256},{"path":"/Users/matt/Sites/motion/node_modules/@pmmmwh/react-refresh-webpack-plugin/loader/index.js","mtime":1641995460598},{"path":"/Users/matt/Sites/motion/node_modules/cache-loader/dist/cjs.js","mtime":1641995460665},{"path":"/Users/matt/Sites/motion/node_modules/babel-loader/lib/index.js","mtime":1641995460018},{"path":"/Users/matt/Sites/motion/node_modules/ts-loader/index.js","mtime":1641995461506}],"contextDependencies":[],"result":["var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { __makeTemplateObject, __read } from \"tslib\";\nimport * as React from \"react\";\nimport { useState, Suspense } from \"react\";\nimport \"@react-three/fiber\";\nimport styled from \"styled-components\";\nimport { motion as motionDom, MotionConfig } from \"framer-motion\";\nimport { motion, MotionCanvas, LayoutCamera } from \"framer-motion-3d\";\nimport { softShadows, Shadow } from \"@react-three/drei\";\nimport { useThree, useFrame } from \"@react-three/fiber\";\nimport { degToRad } from \"three/src/math/MathUtils\";\nsoftShadows();\nexport function Scene(_a) {\n  var isFullscreen = _a.isFullscreen;\n  return React.createElement(MotionCanvas, {\n    dpr: [1, 2],\n    shadows: true\n  }, React.createElement(LayoutCamera, {\n    initial: false,\n    animate: isFullscreen ? {\n      x: 10,\n      y: 5,\n      z: 10,\n      rotateY: degToRad(90),\n      fov: 30\n    } : {\n      x: 15,\n      y: 0.25,\n      z: 0,\n      fov: 10\n    }\n  }), React.createElement(Lights, {\n    isFullscreen: isFullscreen\n  }), React.createElement(Geometry, null));\n}\n_c = Scene;\n\nfunction Lights(_a) {\n  _s();\n\n  var isFullscreen = _a.isFullscreen;\n  var three = useThree();\n  useFrame(function () {\n    three.camera.lookAt(0, 0, 0);\n  });\n  return React.createElement(React.Fragment, null, React.createElement(\"ambientLight\", {\n    intensity: 0.2\n  }), React.createElement(\"pointLight\", {\n    position: [-10, -10, 10],\n    intensity: 2,\n    color: \"#ff20f0\"\n  }), React.createElement(\"pointLight\", {\n    position: [0, 0.5, -1],\n    distance: 1,\n    intensity: 2,\n    color: \"#e4be00\"\n  }), React.createElement(motion.directionalLight, {\n    castShadow: true,\n    intensity: 1.5,\n    \"shadow-mapSize-width\": 1024,\n    \"shadow-mapSize-height\": 1024,\n    \"shadow-camera-far\": 20,\n    \"shadow-camera-left\": -10,\n    \"shadow-camera-right\": 10,\n    \"shadow-camera-top\": 10,\n    \"shadow-camera-bottom\": -10,\n    initial: false,\n    animate: isFullscreen ? {\n      x: 0,\n      y: 8,\n      z: 5\n    } : {\n      x: 4,\n      y: 3,\n      z: 3\n    }\n  }));\n}\n\n_s(Lights, \"4Cdri0Nrhmt40apE50h/8cDSq5c=\", false, function () {\n  return [useThree, useFrame];\n});\n\n_c2 = Lights;\n\nfunction Geometry() {\n  return React.createElement(React.Fragment, null, React.createElement(\"group\", {\n    position: [0, -0.9, -3]\n  }, React.createElement(\"mesh\", {\n    receiveShadow: true,\n    castShadow: true,\n    \"rotation-x\": -Math.PI / 2,\n    \"position-z\": 2,\n    scale: [4, 20, 0.2]\n  }, React.createElement(\"boxBufferGeometry\", null), React.createElement(\"meshStandardMaterial\", {\n    color: \"hotpink\"\n  })), React.createElement(\"mesh\", {\n    receiveShadow: true,\n    castShadow: true,\n    \"rotation-x\": -Math.PI / 2,\n    \"position-y\": 1,\n    scale: [4.2, 0.2, 4]\n  }, React.createElement(\"boxBufferGeometry\", null), React.createElement(\"meshStandardMaterial\", {\n    color: \"#e4be00\"\n  })), React.createElement(\"mesh\", {\n    receiveShadow: true,\n    castShadow: true,\n    \"rotation-x\": -Math.PI / 2,\n    position: [-1.7, 1, 3.5],\n    scale: [0.5, 4, 4]\n  }, React.createElement(\"boxBufferGeometry\", null), React.createElement(\"meshStandardMaterial\", {\n    color: \"#736fbd\"\n  })), React.createElement(\"mesh\", {\n    receiveShadow: true,\n    castShadow: true,\n    \"rotation-x\": -Math.PI / 2,\n    position: [0, 4.5, 3],\n    scale: [2, 0.03, 4]\n  }, React.createElement(\"boxBufferGeometry\", null), React.createElement(\"meshStandardMaterial\", {\n    color: \"white\"\n  }))), React.createElement(\"mesh\", {\n    receiveShadow: true,\n    castShadow: true\n  }, React.createElement(\"sphereBufferGeometry\", {\n    args: [0.75, 64, 64]\n  }), React.createElement(\"meshPhysicalMaterial\", {\n    color: \"#e7b056\",\n    clearcoat: 1,\n    clearcoatRoughness: 0\n  }), React.createElement(Shadow, {\n    \"position-y\": -0.79,\n    \"rotation-x\": -Math.PI / 2,\n    opacity: 0.6,\n    scale: [0.8, 0.8, 1]\n  })));\n}\n\n_c3 = Geometry;\nvar transition = {\n  duration: 4,\n  ease: [0.54, 0.01, 0.61, 1]\n};\nexport function App() {\n  _s2();\n\n  var _a = __read(useState(false), 2),\n      isFullscreen = _a[0],\n      setFullscreen = _a[1];\n\n  return React.createElement(Container, null, React.createElement(MotionConfig, {\n    transition: transition\n  }, React.createElement(\"div\", {\n    \"data-is-fullscreen\": isFullscreen,\n    onClick: function () {\n      return setFullscreen(!isFullscreen);\n    }\n  }, React.createElement(motionDom.h1, {\n    layout: true,\n    children: \"<LayoutCamera />\"\n  }), React.createElement(motionDom.div, {\n    className: \"container\",\n    layout: true\n  }, React.createElement(Suspense, {\n    fallback: null\n  }, React.createElement(Scene, {\n    isFullscreen: isFullscreen\n  }))))));\n}\n\n_s2(App, \"Hdw5EO+DplCNBEJcNuH8tsP7WZ4=\");\n\n_c4 = App;\nvar Container = styled.div(templateObject_1 || (templateObject_1 = __makeTemplateObject([\"\\n    .container {\\n        width: 200px;\\n        height: 200px;\\n        z-index: 0;\\n        background: #a2b9e7;\\n    }\\n\\n    canvas {\\n        cursor: pointer;\\n    }\\n\\n    [data-is-fullscreen=\\\"true\\\"] .container {\\n        position: fixed;\\n        inset: 0;\\n        width: auto;\\n        height: auto;\\n    }\\n\\n    h1 {\\n        z-index: 1;\\n        display: block;\\n        position: relative;\\n        font-size: 36px;\\n        line-height: 1;\\n    }\\n\\n    [data-is-fullscreen=\\\"true\\\"] h1 {\\n        position: fixed;\\n        top: 80px;\\n        font-size: 24px;\\n    }\\n\"], [\"\\n    .container {\\n        width: 200px;\\n        height: 200px;\\n        z-index: 0;\\n        background: #a2b9e7;\\n    }\\n\\n    canvas {\\n        cursor: pointer;\\n    }\\n\\n    [data-is-fullscreen=\\\"true\\\"] .container {\\n        position: fixed;\\n        inset: 0;\\n        width: auto;\\n        height: auto;\\n    }\\n\\n    h1 {\\n        z-index: 1;\\n        display: block;\\n        position: relative;\\n        font-size: 36px;\\n        line-height: 1;\\n    }\\n\\n    [data-is-fullscreen=\\\"true\\\"] h1 {\\n        position: fixed;\\n        top: 80px;\\n        font-size: 24px;\\n    }\\n\"])));\n_c5 = Container;\nvar templateObject_1;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Scene\");\n$RefreshReg$(_c2, \"Lights\");\n$RefreshReg$(_c3, \"Geometry\");\n$RefreshReg$(_c4, \"App\");\n$RefreshReg$(_c5, \"Container\");",null]}