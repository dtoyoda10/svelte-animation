{"remainingRequest":"/Users/matt/Sites/motion/node_modules/babel-loader/lib/index.js??ruleSet[1].rules[0].use[1]!/Users/matt/Sites/motion/node_modules/ts-loader/index.js??ruleSet[1].rules[0].use[2]!/Users/matt/Sites/motion/dev/examples/LazyMotion-async.tsx","dependencies":[{"path":"/Users/matt/Sites/motion/dev/examples/LazyMotion-async.tsx","mtime":1642594856253},{"path":"/Users/matt/Sites/motion/node_modules/@pmmmwh/react-refresh-webpack-plugin/loader/index.js","mtime":1641995460598},{"path":"/Users/matt/Sites/motion/node_modules/cache-loader/dist/cjs.js","mtime":1641995460665},{"path":"/Users/matt/Sites/motion/node_modules/babel-loader/lib/index.js","mtime":1641995460018},{"path":"/Users/matt/Sites/motion/node_modules/ts-loader/index.js","mtime":1641995461506}],"contextDependencies":[],"result":["import * as React from \"react\";\nimport { m, LazyMotion } from \"framer-motion\";\n/**\n * An example of dynamically loading features from a different entry point.\n */\n\nvar style = {\n  width: 100,\n  height: 100,\n  background: \"white\",\n  x: 0,\n  borderRadius: 20\n};\nvar Component = React.memo(_c = function () {\n  return React.createElement(m.div, {\n    animate: {\n      width: [null, 50, 200, 100]\n    },\n    transition: {\n      duration: 2,\n      easings: [\"circOut\", \"circOut\", \"circOut\"],\n      times: [0, 0.1, 0.9, 1]\n    },\n    style: style\n  });\n});\n_c2 = Component;\nexport var App = function () {\n  return React.createElement(LazyMotion, {\n    features: function () {\n      return new Promise(function (resolve, reject) {\n        setTimeout(function () {\n          import(\"./inc/dynamic-features\").then(function (res) {\n            reject();\n            resolve(res.default);\n          });\n        }, 5000);\n      });\n    }\n  }, React.createElement(Component, null));\n};\n_c3 = App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Component$React.memo\");\n$RefreshReg$(_c2, \"Component\");\n$RefreshReg$(_c3, \"App\");",null]}