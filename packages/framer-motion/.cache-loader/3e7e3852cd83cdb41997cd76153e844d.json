{"remainingRequest":"/Users/matt/Sites/motion/node_modules/babel-loader/lib/index.js??ruleSet[1].rules[0].use[1]!/Users/matt/Sites/motion/node_modules/ts-loader/index.js??ruleSet[1].rules[0].use[2]!/Users/matt/Sites/motion/packages/framer-motion/cypress/integration/svg.ts","dependencies":[{"path":"/Users/matt/Sites/motion/packages/framer-motion/cypress/integration/svg.ts","mtime":1637680908104},{"path":"/Users/matt/Sites/motion/node_modules/@pmmmwh/react-refresh-webpack-plugin/loader/index.js","mtime":1641995460598},{"path":"/Users/matt/Sites/motion/node_modules/cache-loader/dist/cjs.js","mtime":1641995460665},{"path":"/Users/matt/Sites/motion/node_modules/babel-loader/lib/index.js","mtime":1641995460018},{"path":"/Users/matt/Sites/motion/node_modules/ts-loader/index.js","mtime":1641995461506}],"contextDependencies":[],"result":["\"use strict\";\n\ndescribe(\"SVG\", function () {\n  it(\"Correctly applies transforms\", function () {\n    cy.visit(\"?test=svg\").wait(200).get(\"[data-testid='rotate']\").should(function ($rotate) {\n      var rotate = $rotate[0];\n\n      var _a = rotate.getBoundingClientRect(),\n          top = _a.top,\n          left = _a.left,\n          right = _a.right,\n          bottom = _a.bottom;\n\n      expect(Math.round(top)).to.equal(29);\n      expect(Math.round(left)).to.equal(29);\n      expect(Math.round(right)).to.equal(171);\n      expect(Math.round(bottom)).to.equal(171);\n    }).get(\"[data-testid='scale']\").should(function ($scale) {\n      var scale = $scale[0];\n\n      var _a = scale.getBoundingClientRect(),\n          top = _a.top,\n          left = _a.left,\n          right = _a.right,\n          bottom = _a.bottom;\n\n      expect(top).to.equal(150);\n      expect(left).to.equal(0);\n      expect(right).to.equal(200);\n      expect(bottom).to.equal(350);\n    }).get(\"[data-testid='translate']\").should(function ($translate) {\n      var translate = $translate[0];\n\n      var _a = translate.getBoundingClientRect(),\n          top = _a.top,\n          left = _a.left,\n          right = _a.right,\n          bottom = _a.bottom;\n\n      expect(top).to.equal(350);\n      expect(left).to.equal(150);\n      expect(right).to.equal(250);\n      expect(bottom).to.equal(450);\n    });\n  });\n  it(\"Correctly applies transforms in static mode\", function () {\n    cy.visit(\"?test=svg&isStatic=true\").wait(200).get(\"[data-testid='rotate']\").should(function ($rotate) {\n      var rotate = $rotate[0];\n\n      var _a = rotate.getBoundingClientRect(),\n          top = _a.top,\n          left = _a.left,\n          right = _a.right,\n          bottom = _a.bottom;\n\n      expect(Math.round(top)).to.equal(29);\n      expect(Math.round(left)).to.equal(29);\n      expect(Math.round(right)).to.equal(171);\n      expect(Math.round(bottom)).to.equal(171);\n    }).get(\"[data-testid='scale']\").should(function ($scale) {\n      var scale = $scale[0];\n\n      var _a = scale.getBoundingClientRect(),\n          top = _a.top,\n          left = _a.left,\n          right = _a.right,\n          bottom = _a.bottom;\n\n      expect(top).to.equal(150);\n      expect(left).to.equal(0);\n      expect(right).to.equal(200);\n      expect(bottom).to.equal(350);\n    }).get(\"[data-testid='translate']\").should(function ($translate) {\n      var translate = $translate[0];\n\n      var _a = translate.getBoundingClientRect(),\n          top = _a.top,\n          left = _a.left,\n          right = _a.right,\n          bottom = _a.bottom;\n\n      expect(top).to.equal(350);\n      expect(left).to.equal(150);\n      expect(right).to.equal(250);\n      expect(bottom).to.equal(450);\n    });\n  });\n  it(\"Correctly animates to CSS variables\", function () {\n    cy.visit(\"?test=svg-css-vars\").wait(50).get(\"svg\").click().wait(50).get(\"circle\").should(function (_a) {\n      var $circle = _a[0];\n      expect($circle.getAttribute(\"fill\")).to.equal(\"rgba(180, 0, 180, 1)\");\n    });\n  });\n});",{"version":3,"sources":["/Users/matt/Sites/motion/packages/framer-motion/cypress/integration/svg.ts"],"names":["describe","it","cy","visit","wait","get","should","$rotate","rotate","_a","getBoundingClientRect","top","left","right","bottom","expect","Math","round","to","equal","$scale","scale","$translate","translate","click","$circle","getAttribute"],"mappings":"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","sourcesContent":["\"use strict\";\ndescribe(\"SVG\", function () {\n    it(\"Correctly applies transforms\", function () {\n        cy.visit(\"?test=svg\")\n            .wait(200)\n            .get(\"[data-testid='rotate']\")\n            .should(function ($rotate) {\n            var rotate = $rotate[0];\n            var _a = rotate.getBoundingClientRect(), top = _a.top, left = _a.left, right = _a.right, bottom = _a.bottom;\n            expect(Math.round(top)).to.equal(29);\n            expect(Math.round(left)).to.equal(29);\n            expect(Math.round(right)).to.equal(171);\n            expect(Math.round(bottom)).to.equal(171);\n        })\n            .get(\"[data-testid='scale']\")\n            .should(function ($scale) {\n            var scale = $scale[0];\n            var _a = scale.getBoundingClientRect(), top = _a.top, left = _a.left, right = _a.right, bottom = _a.bottom;\n            expect(top).to.equal(150);\n            expect(left).to.equal(0);\n            expect(right).to.equal(200);\n            expect(bottom).to.equal(350);\n        })\n            .get(\"[data-testid='translate']\")\n            .should(function ($translate) {\n            var translate = $translate[0];\n            var _a = translate.getBoundingClientRect(), top = _a.top, left = _a.left, right = _a.right, bottom = _a.bottom;\n            expect(top).to.equal(350);\n            expect(left).to.equal(150);\n            expect(right).to.equal(250);\n            expect(bottom).to.equal(450);\n        });\n    });\n    it(\"Correctly applies transforms in static mode\", function () {\n        cy.visit(\"?test=svg&isStatic=true\")\n            .wait(200)\n            .get(\"[data-testid='rotate']\")\n            .should(function ($rotate) {\n            var rotate = $rotate[0];\n            var _a = rotate.getBoundingClientRect(), top = _a.top, left = _a.left, right = _a.right, bottom = _a.bottom;\n            expect(Math.round(top)).to.equal(29);\n            expect(Math.round(left)).to.equal(29);\n            expect(Math.round(right)).to.equal(171);\n            expect(Math.round(bottom)).to.equal(171);\n        })\n            .get(\"[data-testid='scale']\")\n            .should(function ($scale) {\n            var scale = $scale[0];\n            var _a = scale.getBoundingClientRect(), top = _a.top, left = _a.left, right = _a.right, bottom = _a.bottom;\n            expect(top).to.equal(150);\n            expect(left).to.equal(0);\n            expect(right).to.equal(200);\n            expect(bottom).to.equal(350);\n        })\n            .get(\"[data-testid='translate']\")\n            .should(function ($translate) {\n            var translate = $translate[0];\n            var _a = translate.getBoundingClientRect(), top = _a.top, left = _a.left, right = _a.right, bottom = _a.bottom;\n            expect(top).to.equal(350);\n            expect(left).to.equal(150);\n            expect(right).to.equal(250);\n            expect(bottom).to.equal(450);\n        });\n    });\n    it(\"Correctly animates to CSS variables\", function () {\n        cy.visit(\"?test=svg-css-vars\")\n            .wait(50)\n            .get(\"svg\")\n            .click()\n            .wait(50)\n            .get(\"circle\")\n            .should(function (_a) {\n            var $circle = _a[0];\n            expect($circle.getAttribute(\"fill\")).to.equal(\"rgba(180, 0, 180, 1)\");\n        });\n    });\n});\n"]}]}