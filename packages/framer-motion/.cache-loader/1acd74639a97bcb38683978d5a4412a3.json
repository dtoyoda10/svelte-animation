{"remainingRequest":"/Users/matt/Sites/motion/node_modules/babel-loader/lib/index.js??ruleSet[1].rules[0].use[1]!/Users/matt/Sites/motion/node_modules/ts-loader/index.js??ruleSet[1].rules[0].use[2]!/Users/matt/Sites/motion/packages/framer-motion/cypress/integration/layout-cancelled-finishes.ts","dependencies":[{"path":"/Users/matt/Sites/motion/packages/framer-motion/cypress/integration/layout-cancelled-finishes.ts","mtime":1635951863848},{"path":"/Users/matt/Sites/motion/node_modules/@pmmmwh/react-refresh-webpack-plugin/loader/index.js","mtime":1641995460598},{"path":"/Users/matt/Sites/motion/node_modules/cache-loader/dist/cjs.js","mtime":1641995460665},{"path":"/Users/matt/Sites/motion/node_modules/babel-loader/lib/index.js","mtime":1641995460018},{"path":"/Users/matt/Sites/motion/node_modules/ts-loader/index.js","mtime":1641995461506}],"contextDependencies":[],"result":["\"use strict\";\n\ndescribe(\"Cancelled Animation\", function () {\n  it(\"Allows the animation to be marked complete\", function () {\n    cy.visit(\"?test=layout-cancelled-finishes\").get(\"[data-testid='cancellable']\").trigger(\"click\").wait(200).should(function ($cancellable) {\n      var cancellable = $cancellable[0];\n      expect(cancellable).to.not.exist;\n    });\n  });\n});",{"version":3,"sources":["/Users/matt/Sites/motion/packages/framer-motion/cypress/integration/layout-cancelled-finishes.ts"],"names":["describe","it","cy","visit","get","trigger","wait","should","$cancellable","cancellable","expect","to","not","exist"],"mappings":"AAAA;;AACAA,QAAQ,CAAC,qBAAD,EAAwB,YAAY;AACxCC,EAAAA,EAAE,CAAC,4CAAD,EAA+C,YAAY;AACzDC,IAAAA,EAAE,CAACC,KAAH,CAAS,iCAAT,EACKC,GADL,CACS,6BADT,EAEKC,OAFL,CAEa,OAFb,EAGKC,IAHL,CAGU,GAHV,EAIKC,MAJL,CAIY,UAAUC,YAAV,EAAwB;AAChC,UAAIC,WAAW,GAAGD,YAAY,CAAC,CAAD,CAA9B;AACAE,MAAAA,MAAM,CAACD,WAAD,CAAN,CAAoBE,EAApB,CAAuBC,GAAvB,CAA2BC,KAA3B;AACH,KAPD;AAQH,GATC,CAAF;AAUH,CAXO,CAAR","sourcesContent":["\"use strict\";\ndescribe(\"Cancelled Animation\", function () {\n    it(\"Allows the animation to be marked complete\", function () {\n        cy.visit(\"?test=layout-cancelled-finishes\")\n            .get(\"[data-testid='cancellable']\")\n            .trigger(\"click\")\n            .wait(200)\n            .should(function ($cancellable) {\n            var cancellable = $cancellable[0];\n            expect(cancellable).to.not.exist;\n        });\n    });\n});\n"]}]}