{"remainingRequest":"/Users/matt/Sites/motion/node_modules/babel-loader/lib/index.js??ruleSet[1].rules[0].use[1]!/Users/matt/Sites/motion/node_modules/ts-loader/index.js??ruleSet[1].rules[0].use[2]!/Users/matt/Sites/motion/packages/framer-motion/cypress/integration/layout-viewport-jump.ts","dependencies":[{"path":"/Users/matt/Sites/motion/packages/framer-motion/cypress/integration/layout-viewport-jump.ts","mtime":1635951863848},{"path":"/Users/matt/Sites/motion/node_modules/@pmmmwh/react-refresh-webpack-plugin/loader/index.js","mtime":1641995460598},{"path":"/Users/matt/Sites/motion/node_modules/cache-loader/dist/cjs.js","mtime":1641995460665},{"path":"/Users/matt/Sites/motion/node_modules/babel-loader/lib/index.js","mtime":1641995460018},{"path":"/Users/matt/Sites/motion/node_modules/ts-loader/index.js","mtime":1641995461506}],"contextDependencies":[],"result":["\"use strict\";\n\nfunction expectBbox(element, expectedBbox) {\n  var bbox = element.getBoundingClientRect();\n  expect(Math.floor(bbox.top)).to.equal(expectedBbox.top);\n  expect(Math.floor(bbox.width)).to.equal(expectedBbox.width);\n  expect(Math.floor(bbox.height)).to.equal(expectedBbox.height);\n}\n\ndescribe(\"Viewport jump\", function () {\n  it(\"If viewport jumps, don't trigger layout animation\", function () {\n    cy.viewport(1000, 600).visit(\"?test=layout-viewport-jump\").wait(50).get(\"#box\").should(function (_a) {\n      var $box = _a[0];\n      expectBbox($box, {\n        height: 100,\n        top: 100,\n        width: 100\n      });\n    });\n    cy.scrollTo(0, 100).get(\"#box\").should(function (_a) {\n      var $box = _a[0];\n      expectBbox($box, {\n        height: 100,\n        top: 0,\n        width: 100\n      });\n    }).trigger(\"click\").wait(50).should(function (_a) {\n      var $box = _a[0];\n      expectBbox($box, {\n        height: 100,\n        top: 100,\n        width: 100\n      });\n    });\n  });\n  /**\n   * This passes locally but can't get it to pass in Cypress\n   */\n\n  it(\"If div scroll jumps, don't trigger layout animation if provided layoutScroll prop\", function () {\n    cy.viewport(1000, 600).visit(\"?test=layout-viewport-jump&nested=true\").wait(50).get(\"#box\").should(function (_a) {\n      var $box = _a[0];\n      expectBbox($box, {\n        height: 100,\n        top: 100,\n        width: 100\n      });\n    }).get(\"#scrollable\").scrollTo(0, 100).get(\"#box\").should(function (_a) {\n      var $box = _a[0];\n      expectBbox($box, {\n        height: 100,\n        top: 0,\n        width: 100\n      });\n    }).trigger(\"click\").wait(50).should(function (_a) {\n      var $box = _a[0];\n      expectBbox($box, {\n        height: 100,\n        top: 100,\n        width: 100\n      });\n    });\n  });\n});",{"version":3,"sources":["/Users/matt/Sites/motion/packages/framer-motion/cypress/integration/layout-viewport-jump.ts"],"names":["expectBbox","element","expectedBbox","bbox","getBoundingClientRect","expect","Math","floor","top","to","equal","width","height","describe","it","cy","viewport","visit","wait","get","should","_a","$box","scrollTo","trigger"],"mappings":"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","sourcesContent":["\"use strict\";\nfunction expectBbox(element, expectedBbox) {\n    var bbox = element.getBoundingClientRect();\n    expect(Math.floor(bbox.top)).to.equal(expectedBbox.top);\n    expect(Math.floor(bbox.width)).to.equal(expectedBbox.width);\n    expect(Math.floor(bbox.height)).to.equal(expectedBbox.height);\n}\ndescribe(\"Viewport jump\", function () {\n    it(\"If viewport jumps, don't trigger layout animation\", function () {\n        cy.viewport(1000, 600)\n            .visit(\"?test=layout-viewport-jump\")\n            .wait(50)\n            .get(\"#box\")\n            .should(function (_a) {\n            var $box = _a[0];\n            expectBbox($box, {\n                height: 100,\n                top: 100,\n                width: 100,\n            });\n        });\n        cy.scrollTo(0, 100)\n            .get(\"#box\")\n            .should(function (_a) {\n            var $box = _a[0];\n            expectBbox($box, {\n                height: 100,\n                top: 0,\n                width: 100,\n            });\n        })\n            .trigger(\"click\")\n            .wait(50)\n            .should(function (_a) {\n            var $box = _a[0];\n            expectBbox($box, {\n                height: 100,\n                top: 100,\n                width: 100,\n            });\n        });\n    });\n    /**\n     * This passes locally but can't get it to pass in Cypress\n     */\n    it(\"If div scroll jumps, don't trigger layout animation if provided layoutScroll prop\", function () {\n        cy.viewport(1000, 600)\n            .visit(\"?test=layout-viewport-jump&nested=true\")\n            .wait(50)\n            .get(\"#box\")\n            .should(function (_a) {\n            var $box = _a[0];\n            expectBbox($box, {\n                height: 100,\n                top: 100,\n                width: 100,\n            });\n        })\n            .get(\"#scrollable\")\n            .scrollTo(0, 100)\n            .get(\"#box\")\n            .should(function (_a) {\n            var $box = _a[0];\n            expectBbox($box, {\n                height: 100,\n                top: 0,\n                width: 100,\n            });\n        })\n            .trigger(\"click\")\n            .wait(50)\n            .should(function (_a) {\n            var $box = _a[0];\n            expectBbox($box, {\n                height: 100,\n                top: 100,\n                width: 100,\n            });\n        });\n    });\n});\n"]}]}