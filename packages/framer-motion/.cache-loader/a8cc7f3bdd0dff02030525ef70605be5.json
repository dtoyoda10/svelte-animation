{"remainingRequest":"/Users/matt/Sites/motion/node_modules/babel-loader/lib/index.js??ruleSet[1].rules[0].use[1]!/Users/matt/Sites/motion/node_modules/ts-loader/index.js??ruleSet[1].rules[0].use[2]!/Users/matt/Sites/motion/packages/framer-motion/cypress/integration/drag-to-reorder.ts","dependencies":[{"path":"/Users/matt/Sites/motion/packages/framer-motion/cypress/integration/drag-to-reorder.ts","mtime":1635951863847},{"path":"/Users/matt/Sites/motion/node_modules/@pmmmwh/react-refresh-webpack-plugin/loader/index.js","mtime":1641995460598},{"path":"/Users/matt/Sites/motion/node_modules/cache-loader/dist/cjs.js","mtime":1641995460665},{"path":"/Users/matt/Sites/motion/node_modules/babel-loader/lib/index.js","mtime":1641995460018},{"path":"/Users/matt/Sites/motion/node_modules/ts-loader/index.js","mtime":1641995461506}],"contextDependencies":[],"result":["\"use strict\";\n\nfunction expectBbox(element, expectedBbox) {\n  var bbox = element.getBoundingClientRect();\n  /**\n   * Using within as this test is measuring differently on different Mac screens\n   */\n\n  expect(bbox.left).to.be.within(expectedBbox.left - 2, expectedBbox.left + 2);\n  expect(bbox.top).to.be.within(expectedBbox.top - 2, expectedBbox.top + 2);\n  expect(bbox.width).to.be.within(expectedBbox.width - 2, expectedBbox.width + 2);\n  expect(bbox.height).to.be.within(expectedBbox.height - 2, expectedBbox.height + 2);\n}\n\ndescribe(\"Drag to reorder\", function () {\n  it(\"Y axis\", function () {\n    cy.visit(\"?test=drag-to-reorder\").wait(50).get(\"#Tomato\").should(function (_a) {\n      var $item = _a[0];\n      expectBbox($item, {\n        height: 68,\n        left: 350,\n        top: 174,\n        width: 340\n      });\n    }).get(\"#Cucumber\").should(function (_a) {\n      var $item = _a[0];\n      expectBbox($item, {\n        height: 68,\n        left: 350,\n        top: 252,\n        width: 340\n      });\n    }).get(\"#Tomato\").trigger(\"pointerdown\", 360, 175, {\n      force: true\n    }).wait(50).trigger(\"pointermove\", 360, 180, {\n      force: true\n    }).wait(50).trigger(\"pointermove\", 360, 200, {\n      force: true\n    }).wait(50).trigger(\"pointermove\", 360, 220, {\n      force: true\n    }).wait(100).should(function (_a) {\n      var $item = _a[0];\n      expectBbox($item, {\n        height: 68,\n        left: 350,\n        top: 249,\n        width: 340\n      });\n    }).get(\"#Cucumber\").should(function (_a) {\n      var $item = _a[0];\n      expectBbox($item, {\n        height: 68,\n        left: 350,\n        top: 174,\n        width: 340\n      });\n    }).get(\"#Tomato\").trigger(\"pointerup\", 360, 220, {\n      force: true\n    }).wait(100).should(function (_a) {\n      var $item = _a[0];\n      expectBbox($item, {\n        height: 68,\n        left: 350,\n        top: 252,\n        width: 340\n      });\n    }).get(\"#Cucumber\").trigger(\"pointerdown\", 360, 175, {\n      force: true\n    }).wait(50).trigger(\"pointermove\", 360, 180, {\n      force: true\n    }).wait(50).trigger(\"pointermove\", 360, 200, {\n      force: true\n    }).wait(50).trigger(\"pointermove\", 360, 220, {\n      force: true\n    }).wait(100).should(function (_a) {\n      var $item = _a[0];\n      expectBbox($item, {\n        height: 68,\n        left: 350,\n        top: 249,\n        width: 340\n      });\n    }).get(\"#Tomato\").should(function (_a) {\n      var $item = _a[0];\n      expectBbox($item, {\n        height: 68,\n        left: 350,\n        top: 174,\n        width: 340\n      });\n    });\n  });\n  it(\"X axis\", function () {\n    cy.visit(\"?test=drag-to-reorder&axis=x\").wait(50).get(\"#Tomato\").should(function (_a) {\n      var $item = _a[0];\n      expectBbox($item, {\n        height: 68,\n        left: 350,\n        top: 291,\n        width: 340\n      });\n    }).get(\"#Cucumber\").should(function (_a) {\n      var $item = _a[0];\n      expectBbox($item, {\n        height: 68,\n        left: 690,\n        top: 291,\n        width: 340\n      });\n    }).get(\"#Tomato\").trigger(\"pointerdown\", 360, 175, {\n      force: true\n    }).wait(50).trigger(\"pointermove\", 365, 175, {\n      force: true\n    }).wait(50).trigger(\"pointermove\", 425, 175, {\n      force: true\n    }).wait(50).trigger(\"pointermove\", 475, 175, {\n      force: true\n    }).wait(100).should(function (_a) {\n      var $item = _a[0];\n      expectBbox($item, {\n        height: 68,\n        left: 535,\n        top: 291,\n        width: 340\n      });\n    }).get(\"#Cucumber\").should(function (_a) {\n      var $item = _a[0];\n      expectBbox($item, {\n        height: 68,\n        left: 350,\n        top: 291,\n        width: 340\n      });\n    });\n  });\n});",{"version":3,"sources":["/Users/matt/Sites/motion/packages/framer-motion/cypress/integration/drag-to-reorder.ts"],"names":["expectBbox","element","expectedBbox","bbox","getBoundingClientRect","expect","left","to","be","within","top","width","height","describe","it","cy","visit","wait","get","should","_a","$item","trigger","force"],"mappings":"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","sourcesContent":["\"use strict\";\nfunction expectBbox(element, expectedBbox) {\n    var bbox = element.getBoundingClientRect();\n    /**\n     * Using within as this test is measuring differently on different Mac screens\n     */\n    expect(bbox.left).to.be.within(expectedBbox.left - 2, expectedBbox.left + 2);\n    expect(bbox.top).to.be.within(expectedBbox.top - 2, expectedBbox.top + 2);\n    expect(bbox.width).to.be.within(expectedBbox.width - 2, expectedBbox.width + 2);\n    expect(bbox.height).to.be.within(expectedBbox.height - 2, expectedBbox.height + 2);\n}\ndescribe(\"Drag to reorder\", function () {\n    it(\"Y axis\", function () {\n        cy.visit(\"?test=drag-to-reorder\")\n            .wait(50)\n            .get(\"#Tomato\")\n            .should(function (_a) {\n            var $item = _a[0];\n            expectBbox($item, {\n                height: 68,\n                left: 350,\n                top: 174,\n                width: 340,\n            });\n        })\n            .get(\"#Cucumber\")\n            .should(function (_a) {\n            var $item = _a[0];\n            expectBbox($item, {\n                height: 68,\n                left: 350,\n                top: 252,\n                width: 340,\n            });\n        })\n            .get(\"#Tomato\")\n            .trigger(\"pointerdown\", 360, 175, { force: true })\n            .wait(50)\n            .trigger(\"pointermove\", 360, 180, { force: true })\n            .wait(50)\n            .trigger(\"pointermove\", 360, 200, { force: true })\n            .wait(50)\n            .trigger(\"pointermove\", 360, 220, { force: true })\n            .wait(100)\n            .should(function (_a) {\n            var $item = _a[0];\n            expectBbox($item, {\n                height: 68,\n                left: 350,\n                top: 249,\n                width: 340,\n            });\n        })\n            .get(\"#Cucumber\")\n            .should(function (_a) {\n            var $item = _a[0];\n            expectBbox($item, {\n                height: 68,\n                left: 350,\n                top: 174,\n                width: 340,\n            });\n        })\n            .get(\"#Tomato\")\n            .trigger(\"pointerup\", 360, 220, { force: true })\n            .wait(100)\n            .should(function (_a) {\n            var $item = _a[0];\n            expectBbox($item, {\n                height: 68,\n                left: 350,\n                top: 252,\n                width: 340,\n            });\n        })\n            .get(\"#Cucumber\")\n            .trigger(\"pointerdown\", 360, 175, { force: true })\n            .wait(50)\n            .trigger(\"pointermove\", 360, 180, { force: true })\n            .wait(50)\n            .trigger(\"pointermove\", 360, 200, { force: true })\n            .wait(50)\n            .trigger(\"pointermove\", 360, 220, { force: true })\n            .wait(100)\n            .should(function (_a) {\n            var $item = _a[0];\n            expectBbox($item, {\n                height: 68,\n                left: 350,\n                top: 249,\n                width: 340,\n            });\n        })\n            .get(\"#Tomato\")\n            .should(function (_a) {\n            var $item = _a[0];\n            expectBbox($item, {\n                height: 68,\n                left: 350,\n                top: 174,\n                width: 340,\n            });\n        });\n    });\n    it(\"X axis\", function () {\n        cy.visit(\"?test=drag-to-reorder&axis=x\")\n            .wait(50)\n            .get(\"#Tomato\")\n            .should(function (_a) {\n            var $item = _a[0];\n            expectBbox($item, {\n                height: 68,\n                left: 350,\n                top: 291,\n                width: 340,\n            });\n        })\n            .get(\"#Cucumber\")\n            .should(function (_a) {\n            var $item = _a[0];\n            expectBbox($item, {\n                height: 68,\n                left: 690,\n                top: 291,\n                width: 340,\n            });\n        })\n            .get(\"#Tomato\")\n            .trigger(\"pointerdown\", 360, 175, { force: true })\n            .wait(50)\n            .trigger(\"pointermove\", 365, 175, { force: true })\n            .wait(50)\n            .trigger(\"pointermove\", 425, 175, { force: true })\n            .wait(50)\n            .trigger(\"pointermove\", 475, 175, { force: true })\n            .wait(100)\n            .should(function (_a) {\n            var $item = _a[0];\n            expectBbox($item, {\n                height: 68,\n                left: 535,\n                top: 291,\n                width: 340,\n            });\n        })\n            .get(\"#Cucumber\")\n            .should(function (_a) {\n            var $item = _a[0];\n            expectBbox($item, {\n                height: 68,\n                left: 350,\n                top: 291,\n                width: 340,\n            });\n        });\n    });\n});\n"]}]}