{"remainingRequest":"/Users/matt/Sites/motion/node_modules/babel-loader/lib/index.js??ruleSet[1].rules[0].use[1]!/Users/matt/Sites/motion/node_modules/ts-loader/index.js??ruleSet[1].rules[0].use[2]!/Users/matt/Sites/motion/packages/framer-motion/cypress/integration/layout.ts","dependencies":[{"path":"/Users/matt/Sites/motion/packages/framer-motion/cypress/integration/layout.ts","mtime":1635501741671},{"path":"/Users/matt/Sites/motion/node_modules/@pmmmwh/react-refresh-webpack-plugin/loader/index.js","mtime":1641995460598},{"path":"/Users/matt/Sites/motion/node_modules/cache-loader/dist/cjs.js","mtime":1641995460665},{"path":"/Users/matt/Sites/motion/node_modules/babel-loader/lib/index.js","mtime":1641995460018},{"path":"/Users/matt/Sites/motion/node_modules/ts-loader/index.js","mtime":1641995461506}],"contextDependencies":[],"result":["\"use strict\";\n\nfunction expectBbox(element, expectedBbox) {\n  var bbox = element.getBoundingClientRect();\n  expect(bbox.left).to.equal(expectedBbox.left);\n  expect(bbox.top).to.equal(expectedBbox.top);\n  expect(bbox.width).to.equal(expectedBbox.width);\n  expect(bbox.height).to.equal(expectedBbox.height);\n}\n\ndescribe(\"Layout animation\", function () {\n  it(\"Correctly fires layout={true} animations and fires onLayoutAnimationComplete\", function () {\n    cy.visit(\"?test=layout\").wait(50).get(\"#box\").should(function (_a) {\n      var $box = _a[0];\n      expectBbox($box, {\n        top: 0,\n        left: 0,\n        width: 100,\n        height: 200\n      });\n    }).trigger(\"click\").wait(50).should(function (_a) {\n      var $box = _a[0];\n      expectBbox($box, {\n        top: 50,\n        left: 100,\n        width: 200,\n        height: 250\n      });\n    })\n    /**\n     * Test that onLayoutAnimationComplete fires\n     */\n    .wait(200).should(function (_a) {\n      var $box = _a[0];\n      expect($box.style.backgroundColor).to.equal(\"blue\");\n    });\n  });\n  it(\"It correctly fires layout=\\\"position\\\" animations\", function () {\n    cy.visit(\"?test=layout&type=position\").wait(50).get(\"#box\").should(function (_a) {\n      var $box = _a[0];\n      expectBbox($box, {\n        top: 0,\n        left: 0,\n        width: 100,\n        height: 200\n      });\n    }).trigger(\"click\").wait(50).should(function (_a) {\n      var $box = _a[0];\n      expectBbox($box, {\n        top: 50,\n        left: 100,\n        width: 300,\n        height: 300\n      });\n    });\n  });\n  it(\"It correctly fires layout=\\\"size\\\" animations\", function () {\n    cy.visit(\"?test=layout&type=size\").wait(50).get(\"#box\").should(function (_a) {\n      var $box = _a[0];\n      expectBbox($box, {\n        top: 0,\n        left: 0,\n        width: 100,\n        height: 200\n      });\n    }).trigger(\"click\").wait(50).should(function (_a) {\n      var $box = _a[0];\n      expectBbox($box, {\n        top: 100,\n        left: 200,\n        width: 200,\n        height: 250\n      });\n    });\n  });\n  it(\"Doesn't initiate a new animation if the viewport box hasn't updated between renders\", function () {\n    cy.visit(\"?test=layout-interrupt\").wait(50).get(\"#box\").should(function (_a) {\n      var $box = _a[0];\n      expectBbox($box, {\n        top: 0,\n        left: 0,\n        width: 100,\n        height: 200\n      });\n    }).trigger(\"click\").wait(50).should(function (_a) {\n      var $box = _a[0];\n      expectBbox($box, {\n        top: 50,\n        left: 100,\n        width: 200,\n        height: 250\n      });\n    })\n    /**\n     * The easing curve is set to always return t=0.5, so if this box moves it means\n     * a new animation has started\n     */\n    .trigger(\"click\").wait(50).should(function (_a) {\n      var $box = _a[0];\n      expectBbox($box, {\n        top: 50,\n        left: 100,\n        width: 200,\n        height: 250\n      });\n    });\n  });\n  it(\"Doesn't initiate a new animation if layoutDependency hasn't changed\", function () {\n    cy.visit(\"?test=layout-dependency\").wait(50).get(\"#box\").should(function (_a) {\n      var $box = _a[0];\n      expectBbox($box, {\n        top: 0,\n        left: 0,\n        width: 100,\n        height: 200\n      });\n    }).trigger(\"click\").wait(50).should(function (_a) {\n      var $box = _a[0];\n      expectBbox($box, {\n        height: 300,\n        left: 200,\n        top: 100,\n        width: 300\n      });\n    })\n    /**\n     * The easing curve is set to always return t=0.5, so if this box moves it means\n     * a new animation has started\n     */\n    .trigger(\"click\").wait(50).should(function (_a) {\n      var $box = _a[0];\n      expectBbox($box, {\n        top: 0,\n        left: 0,\n        width: 100,\n        height: 200\n      });\n    });\n  });\n  it(\"Has a correct bounding box when a transform is applied\", function () {\n    cy.visit(\"?test=layout-scaled-child-in-transformed-parent\").wait(50).get(\"#box\").should(function (_a) {\n      var $box = _a[0];\n      expectBbox($box, {\n        height: 100,\n        left: 200,\n        top: 150,\n        width: 100\n      });\n    }).trigger(\"click\").wait(50).should(function (_a) {\n      var $box = _a[0];\n      expectBbox($box, {\n        height: 100,\n        left: 225,\n        top: 150,\n        width: 75\n      });\n    });\n  });\n});",{"version":3,"sources":["/Users/matt/Sites/motion/packages/framer-motion/cypress/integration/layout.ts"],"names":["expectBbox","element","expectedBbox","bbox","getBoundingClientRect","expect","left","to","equal","top","width","height","describe","it","cy","visit","wait","get","should","_a","$box","trigger","style","backgroundColor"],"mappings":"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","sourcesContent":["\"use strict\";\nfunction expectBbox(element, expectedBbox) {\n    var bbox = element.getBoundingClientRect();\n    expect(bbox.left).to.equal(expectedBbox.left);\n    expect(bbox.top).to.equal(expectedBbox.top);\n    expect(bbox.width).to.equal(expectedBbox.width);\n    expect(bbox.height).to.equal(expectedBbox.height);\n}\ndescribe(\"Layout animation\", function () {\n    it(\"Correctly fires layout={true} animations and fires onLayoutAnimationComplete\", function () {\n        cy.visit(\"?test=layout\")\n            .wait(50)\n            .get(\"#box\")\n            .should(function (_a) {\n            var $box = _a[0];\n            expectBbox($box, {\n                top: 0,\n                left: 0,\n                width: 100,\n                height: 200,\n            });\n        })\n            .trigger(\"click\")\n            .wait(50)\n            .should(function (_a) {\n            var $box = _a[0];\n            expectBbox($box, {\n                top: 50,\n                left: 100,\n                width: 200,\n                height: 250,\n            });\n        })\n            /**\n             * Test that onLayoutAnimationComplete fires\n             */\n            .wait(200)\n            .should(function (_a) {\n            var $box = _a[0];\n            expect($box.style.backgroundColor).to.equal(\"blue\");\n        });\n    });\n    it(\"It correctly fires layout=\\\"position\\\" animations\", function () {\n        cy.visit(\"?test=layout&type=position\")\n            .wait(50)\n            .get(\"#box\")\n            .should(function (_a) {\n            var $box = _a[0];\n            expectBbox($box, {\n                top: 0,\n                left: 0,\n                width: 100,\n                height: 200,\n            });\n        })\n            .trigger(\"click\")\n            .wait(50)\n            .should(function (_a) {\n            var $box = _a[0];\n            expectBbox($box, {\n                top: 50,\n                left: 100,\n                width: 300,\n                height: 300,\n            });\n        });\n    });\n    it(\"It correctly fires layout=\\\"size\\\" animations\", function () {\n        cy.visit(\"?test=layout&type=size\")\n            .wait(50)\n            .get(\"#box\")\n            .should(function (_a) {\n            var $box = _a[0];\n            expectBbox($box, {\n                top: 0,\n                left: 0,\n                width: 100,\n                height: 200,\n            });\n        })\n            .trigger(\"click\")\n            .wait(50)\n            .should(function (_a) {\n            var $box = _a[0];\n            expectBbox($box, {\n                top: 100,\n                left: 200,\n                width: 200,\n                height: 250,\n            });\n        });\n    });\n    it(\"Doesn't initiate a new animation if the viewport box hasn't updated between renders\", function () {\n        cy.visit(\"?test=layout-interrupt\")\n            .wait(50)\n            .get(\"#box\")\n            .should(function (_a) {\n            var $box = _a[0];\n            expectBbox($box, {\n                top: 0,\n                left: 0,\n                width: 100,\n                height: 200,\n            });\n        })\n            .trigger(\"click\")\n            .wait(50)\n            .should(function (_a) {\n            var $box = _a[0];\n            expectBbox($box, {\n                top: 50,\n                left: 100,\n                width: 200,\n                height: 250,\n            });\n        })\n            /**\n             * The easing curve is set to always return t=0.5, so if this box moves it means\n             * a new animation has started\n             */\n            .trigger(\"click\")\n            .wait(50)\n            .should(function (_a) {\n            var $box = _a[0];\n            expectBbox($box, {\n                top: 50,\n                left: 100,\n                width: 200,\n                height: 250,\n            });\n        });\n    });\n    it(\"Doesn't initiate a new animation if layoutDependency hasn't changed\", function () {\n        cy.visit(\"?test=layout-dependency\")\n            .wait(50)\n            .get(\"#box\")\n            .should(function (_a) {\n            var $box = _a[0];\n            expectBbox($box, {\n                top: 0,\n                left: 0,\n                width: 100,\n                height: 200,\n            });\n        })\n            .trigger(\"click\")\n            .wait(50)\n            .should(function (_a) {\n            var $box = _a[0];\n            expectBbox($box, {\n                height: 300,\n                left: 200,\n                top: 100,\n                width: 300,\n            });\n        })\n            /**\n             * The easing curve is set to always return t=0.5, so if this box moves it means\n             * a new animation has started\n             */\n            .trigger(\"click\")\n            .wait(50)\n            .should(function (_a) {\n            var $box = _a[0];\n            expectBbox($box, {\n                top: 0,\n                left: 0,\n                width: 100,\n                height: 200,\n            });\n        });\n    });\n    it(\"Has a correct bounding box when a transform is applied\", function () {\n        cy.visit(\"?test=layout-scaled-child-in-transformed-parent\")\n            .wait(50)\n            .get(\"#box\")\n            .should(function (_a) {\n            var $box = _a[0];\n            expectBbox($box, {\n                height: 100,\n                left: 200,\n                top: 150,\n                width: 100,\n            });\n        })\n            .trigger(\"click\")\n            .wait(50)\n            .should(function (_a) {\n            var $box = _a[0];\n            expectBbox($box, {\n                height: 100,\n                left: 225,\n                top: 150,\n                width: 75,\n            });\n        });\n    });\n});\n"]}]}