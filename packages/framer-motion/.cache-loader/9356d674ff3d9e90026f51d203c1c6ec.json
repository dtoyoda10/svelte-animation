{"remainingRequest":"/Users/matt/Sites/motion/node_modules/babel-loader/lib/index.js??ruleSet[1].rules[0].use[1]!/Users/matt/Sites/motion/node_modules/ts-loader/index.js??ruleSet[1].rules[0].use[2]!/Users/matt/Sites/motion/dev/examples/Shared-layout-lists.tsx","dependencies":[{"path":"/Users/matt/Sites/motion/dev/examples/Shared-layout-lists.tsx","mtime":1642594856254},{"path":"/Users/matt/Sites/motion/node_modules/@pmmmwh/react-refresh-webpack-plugin/loader/index.js","mtime":1641995460598},{"path":"/Users/matt/Sites/motion/node_modules/cache-loader/dist/cjs.js","mtime":1641995460665},{"path":"/Users/matt/Sites/motion/node_modules/babel-loader/lib/index.js","mtime":1641995460018},{"path":"/Users/matt/Sites/motion/node_modules/ts-loader/index.js","mtime":1641995461506}],"contextDependencies":[],"result":["var _s = $RefreshSig$();\n\nimport { __assign, __read, __spreadArray } from \"tslib\";\nimport * as React from \"react\";\nimport { useState } from \"react\";\nimport { motion, AnimatePresence, LayoutGroup } from \"framer-motion\";\nvar transition = {\n  type: \"spring\",\n  duration: 2\n};\n\nvar List = function (_a) {\n  var list = _a.list,\n      onItemClick = _a.onItemClick,\n      backgroundColor = _a.backgroundColor;\n  return React.createElement(motion.ul, {\n    layout: true,\n    style: styles.list,\n    drag: true,\n    transition: transition\n  }, React.createElement(AnimatePresence, null, list.map(function (id) {\n    return React.createElement(motion.li, {\n      style: __assign(__assign({}, styles.item), {\n        backgroundColor: backgroundColor,\n        z: 2\n      }),\n      key: id,\n      layoutId: id,\n      id: \"list-\" + id,\n      onClick: function () {\n        return onItemClick(id);\n      },\n      transition: transition\n    });\n  })));\n};\n\n_c = List;\nexport var App = function () {\n  _s();\n\n  // const [listA, setListA] = useState([0, 1, 2, 3, 4, 5, 6])\n  // const [listB, setListB] = useState([7, 8, 9, 10, 11, 12])\n  //const [lists, setLists] = useState([[0], [1]])\n  var _a = __read(useState([[3, 1, 2], [7, 8, 9]]), 2),\n      lists = _a[0],\n      setLists = _a[1];\n\n  return React.createElement(LayoutGroup, null, React.createElement(\"div\", {\n    style: {\n      position: \"fixed\",\n      inset: 0,\n      backgroundColor: \"#222222\",\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    }\n  }, React.createElement(\"div\", {\n    style: styles.container\n  }, React.createElement(List, {\n    list: lists[0],\n    onItemClick: function (id) {\n      return moveItem(id, 1, lists, setLists);\n    },\n    backgroundColor: \"#ff3366\"\n  }), React.createElement(List, {\n    list: lists[1],\n    onItemClick: function (id) {\n      return moveItem(id, 0, lists, setLists);\n    },\n    backgroundColor: \"#0099ff\"\n  }))));\n};\n\n_s(App, \"tMAbDh1ISjbSjlHmOhe3R94eM1E=\");\n\n_c2 = App;\nvar styles = {\n  container: {\n    width: \"70%\",\n    margin: \"0 auto\",\n    display: \"flex\",\n    justifyContent: \"space-around\",\n    alignItems: \"flex-end\"\n  },\n  list: {\n    width: 350,\n    borderRadius: 10,\n    padding: 10,\n    backgroundColor: \"#444444\",\n    display: \"flex\",\n    listStyle: \"none\",\n    flexDirection: \"column\"\n  },\n  item: {\n    height: 50,\n    width: 330,\n    borderRadius: 5,\n    margin: 10,\n    zIndex: 1,\n    z: 1,\n    position: \"relative\"\n  }\n};\n\nfunction moveItem(id, targetListId, _a, setLists) {\n  var _b = __read(_a, 2),\n      a = _b[0],\n      b = _b[1];\n\n  var targetList = targetListId === 0 ? a : b;\n  var originList = targetListId === 0 ? b : a;\n\n  var newOriginList = __spreadArray([], __read(originList), false);\n\n  var originIndex = newOriginList.indexOf(id);\n  newOriginList.splice(originIndex, 1);\n\n  var newTargetList = __spreadArray([], __read(targetList), false);\n\n  newTargetList.splice(0, 0, id);\n  setLists(targetListId === 0 ? [newTargetList, newOriginList] : [newOriginList, newTargetList]);\n}\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"List\");\n$RefreshReg$(_c2, \"App\");",null]}